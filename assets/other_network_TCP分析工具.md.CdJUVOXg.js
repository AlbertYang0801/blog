import{_ as t,c as p,o as e,aM as l}from"./chunks/framework.Du1sph90.js";const c=JSON.parse('{"title":"TCP分析工具","description":"","frontmatter":{},"headers":[],"relativePath":"other/network/TCP分析工具.md","filePath":"other/network/TCP分析工具.md","lastUpdated":1752827268000}'),n={name:"other/network/TCP分析工具.md"};function i(o,a,r,s,g,h){return e(),p("div",null,a[0]||(a[0]=[l('<h1 id="tcp分析工具" tabindex="-1">TCP分析工具 <a class="header-anchor" href="#tcp分析工具" aria-label="Permalink to &quot;TCP分析工具&quot;">​</a></h1><p><a href="https://www.wireshark.org/#" target="_blank" rel="noreferrer">Wireshark · Go Deep</a></p><p><img src="https://s2.loli.net/2025/07/17/RLz9ubQxwE8noWc.png" alt="image.png" loading="lazy"></p><h2 id="三次握手" tabindex="-1">三次握手 <a class="header-anchor" href="#三次握手" aria-label="Permalink to &quot;三次握手&quot;">​</a></h2><p><img src="https://s2.loli.net/2025/07/17/JUVnyO5mlLwF4QK.png" alt="image.png" loading="lazy"></p><h3 id="第1次握手" tabindex="-1">第1次握手 <a class="header-anchor" href="#第1次握手" aria-label="Permalink to &quot;第1次握手&quot;">​</a></h3><p><img src="https://s2.loli.net/2025/07/17/3I6KsA1fqvTWtlO.png" alt="image.png" loading="lazy"></p><p>syn设置为1，表明这是一个 SYN包</p><p><img src="https://s2.loli.net/2025/07/17/3H87xVfCnlsvrz9.png" alt="image.png" loading="lazy"></p><p><strong>seq = 1390201126</strong></p><p><img src="https://s2.loli.net/2025/07/17/K1IpQ72Ew5xgnGO.png" alt="image.png" loading="lazy"></p><h3 id="第2次握手" tabindex="-1">第2次握手 <a class="header-anchor" href="#第2次握手" aria-label="Permalink to &quot;第2次握手&quot;">​</a></h3><p>syn=1 同时 ACK=1，表明这是一个 SYN/ACK包</p><p><img src="https://s2.loli.net/2025/07/17/ESk7BazKjd8CLvy.png" alt="image.png" loading="lazy"></p><p>服务端返回的 ACK = <strong>客户端第一次发送的 seq+1</strong> = <strong>1390201126+1</strong></p><p>同时服务端向客户端返回了自己的 seq（如果第三次握手客户端返回的ack=seq+1，代表客户端收到了自己发的seq）</p><blockquote><p>也就是说第三次握手发来的ack应该等于 522897289</p></blockquote><p><img src="https://s2.loli.net/2025/07/17/OQnLYrXCple2h7b.png" alt="image.png" loading="lazy"></p><h3 id="第3次握手" tabindex="-1">第3次握手 <a class="header-anchor" href="#第3次握手" aria-label="Permalink to &quot;第3次握手&quot;">​</a></h3><p>可以看到第 3 次握手的 ack=第2次握手seq+1</p><p><img src="https://s2.loli.net/2025/07/17/qdYuPENHvk5bw7a.png" alt="image.png" loading="lazy"></p><p>ack=1，可以看出来这是一个 ACK 请求。</p><p><img src="https://s2.loli.net/2025/07/17/andOBqMHhioxZX7.png" alt="image.png" loading="lazy"></p><h2 id="四次挥手" tabindex="-1">四次挥手 <a class="header-anchor" href="#四次挥手" aria-label="Permalink to &quot;四次挥手&quot;">​</a></h2><p><img src="https://s2.loli.net/2025/07/17/voHlKtFiEx5CNkj.png" alt="image.png" loading="lazy"></p><p><img src="https://s2.loli.net/2025/07/17/shtNyjMwHESF3iX.png" alt="image.png" loading="lazy"></p><p>可以看到四次挥手的过程</p><ul><li><p>FIN、ACK</p></li><li><p>ACK</p><p>服务端返回给客户端ACK之后，此时不接收客户端发来的数据。但是服务端可以把剩余数据发给客户端。</p><p>等发送完毕之后，再通知客户端。</p></li><li><p>FIN、ACK</p><p>客户端经过 MSL 时间后进入 CLOSED 状态。</p></li><li><p>ACK</p><p>服务端收到之后进入 CLOSED 状态，即断开连接。</p></li></ul><p><img src="https://s2.loli.net/2025/07/17/dq3xLHf2SD874tz.png" alt="image.png" loading="lazy"></p>',29)]))}const m=t(n,[["render",i]]);export{c as __pageData,m as default};
