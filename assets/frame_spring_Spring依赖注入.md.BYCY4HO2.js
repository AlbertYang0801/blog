import{_ as e,c as r,o as i,aM as t}from"./chunks/framework.Du1sph90.js";const g=JSON.parse('{"title":"Spring依赖注入","description":"","frontmatter":{},"headers":[],"relativePath":"frame/spring/Spring依赖注入.md","filePath":"frame/spring/Spring依赖注入.md","lastUpdated":1752827238000}'),n={name:"frame/spring/Spring依赖注入.md"};function p(l,a,s,o,_,d){return i(),r("div",null,a[0]||(a[0]=[t('<h1 id="spring依赖注入" tabindex="-1">Spring依赖注入 <a class="header-anchor" href="#spring依赖注入" aria-label="Permalink to &quot;Spring依赖注入&quot;">​</a></h1><p><strong>依赖注入就是通过spring将bean所需要的一些参数传递到bean实例对象的过程（将依赖关系注入到对象中，不需要每次都new对象）</strong></p><ul><li>set方法注入</li><li>构造方法注入</li><li>注解注入</li></ul><h2 id="注解注入的区别" tabindex="-1">注解注入的区别 <a class="header-anchor" href="#注解注入的区别" aria-label="Permalink to &quot;注解注入的区别&quot;">​</a></h2><ul><li><p>@Resource</p><p>byName注入</p><p><img src="https://s2.loli.net/2025/05/30/KCvmoWrP1AyziVt.png" alt="" loading="lazy"></p></li><li><p>Autowired</p><p>byType注入</p></li></ul>',5)]))}const m=e(n,[["render",p]]);export{g as __pageData,m as default};
