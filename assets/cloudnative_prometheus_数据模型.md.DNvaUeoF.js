import{_ as a,c as i,o as t,aN as n}from"./chunks/framework.A-MC8nKA.js";const d=JSON.parse('{"title":"数据模型","description":"","frontmatter":{},"headers":[],"relativePath":"cloudnative/prometheus/数据模型.md","filePath":"cloudnative/prometheus/数据模型.md","lastUpdated":1752827268000}'),e={name:"cloudnative/prometheus/数据模型.md"};function l(p,s,r,h,o,u){return t(),i("div",null,s[0]||(s[0]=[n(`<h1 id="数据模型" tabindex="-1">数据模型 <a class="header-anchor" href="#数据模型" aria-label="Permalink to &quot;数据模型&quot;">​</a></h1><p>Prometheus的存储实现上所有的监控样本都是以 time-series 的形式保存在 Prometheus 内置的TSDB（时序数据库）中，而 time-series 所对应的监控指标 (metric) 也是通过 labelset 进行唯一命名的。</p><h3 id="样本数据" tabindex="-1">样本数据 <a class="header-anchor" href="#样本数据" aria-label="Permalink to &quot;样本数据&quot;">​</a></h3><ul><li>指标(metric)：metric name 和描述当前样本特征的 labelsets;</li><li>时间戳(timestamp)：一个精确到毫秒的时间戳;</li><li>样本值(value)： 一个float64的浮点型数据表示当前样本的值。</li></ul><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>&lt;--------------- metric ---------------------&gt;&lt;-timestamp -&gt;&lt;-value-&gt;</span></span>
<span class="line"><span>http_request_total{status=&quot;200&quot;, method=&quot;GET&quot;}@1434417560938 =&gt; 94355</span></span>
<span class="line"><span>http_request_total{status=&quot;200&quot;, method=&quot;GET&quot;}@1434417561287 =&gt; 94334</span></span>
<span class="line"><span></span></span>
<span class="line"><span>http_request_total{status=&quot;404&quot;, method=&quot;GET&quot;}@1434417560938 =&gt; 38473</span></span>
<span class="line"><span>http_request_total{status=&quot;404&quot;, method=&quot;GET&quot;}@1434417561287 =&gt; 38544</span></span>
<span class="line"><span></span></span>
<span class="line"><span>http_request_total{status=&quot;200&quot;, method=&quot;POST&quot;}@1434417560938 =&gt; 4748</span></span>
<span class="line"><span>http_request_total{status=&quot;200&quot;, method=&quot;POST&quot;}@1434417561287 =&gt; 4785</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h3 id="指标" tabindex="-1">指标 <a class="header-anchor" href="#指标" aria-label="Permalink to &quot;指标&quot;">​</a></h3><p>指标的名称(metric name)可以反映被监控样本的含义（比如，<code>http_request_total</code> - 表示当前系统接收到的HTTP请求总量）。指标名称只能由ASCII字符、数字、下划线以及冒号组成并必须符合正则表达式<code>[a-zA-Z_:][a-zA-Z0-9_:]*</code>。</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>&lt;metric name&gt;{&lt;label name&gt;=&lt;label value&gt;, ...}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="metrics类型" tabindex="-1">Metrics类型 <a class="header-anchor" href="#metrics类型" aria-label="Permalink to &quot;Metrics类型&quot;">​</a></h2><p><a href="https://www.kancloud.cn/pshizhsysu/prometheus/1803793" target="_blank" rel="noreferrer">Metrics类型 · prometheus · 看云</a></p><h3 id="counter-只增不减的计数器" tabindex="-1"><strong>Counter：只增不减的计数器</strong> <a class="header-anchor" href="#counter-只增不减的计数器" aria-label="Permalink to &quot;**Counter：只增不减的计数器**&quot;">​</a></h3><p>Counter类型的指标数据，只增不减（除非系统发生重置）。</p><p>常见的有<code>node_cpu_seconds_total{cpu=&quot;x&quot;,mode=&quot;idle&quot;}</code>，它表示的意思是序号为<code>x</code>的cpu从开机到当前的这段时间内，cpu处于空闲（<code>idle</code>）状态的时间总和。</p><p><img src="https://s2.loli.net/2025/07/16/hoEDqcGs6L3IrBP.png" alt="image.png" loading="lazy"></p><h3 id="gauge-可增可减的仪表盘" tabindex="-1"><strong>Gauge：可增可减的仪表盘</strong> <a class="header-anchor" href="#gauge-可增可减的仪表盘" aria-label="Permalink to &quot;**Gauge：可增可减的仪表盘**&quot;">​</a></h3><p>Gauge类型的指标数据，可增可减，比如内存剩余量<code>node_memory_MemAvailable</code></p><h3 id="histogram-直方图" tabindex="-1"><strong>Histogram：直方图</strong> <a class="header-anchor" href="#histogram-直方图" aria-label="Permalink to &quot;**Histogram：直方图**&quot;">​</a></h3><p>Histogram一个典型的使用场景就是HTTP请求的响应时间。</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># HELP xxx_http_request_duration_seconds Histogram of latencies for HTTP requests.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># TYPE xxx_http_request_duration_seconds histogram</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">xxx_http_request_duration_seconds_bucket</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">{verb=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&quot;GET&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> le=&quot;0.1&quot;}</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 10</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">xxx_http_request_duration_seconds_bucket</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">{verb=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&quot;GET&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> le=&quot;0.2&quot;}</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 20</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">xxx_http_request_duration_seconds_bucket</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">{verb=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&quot;GET&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> le=&quot;0.3&quot;}</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 30</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">xxx_http_request_duration_seconds_bucket</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">{verb=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&quot;GET&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> le=&quot;+Inf&quot;}</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 30</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">xxx_http_request_duration_seconds_sum</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">{verb=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&quot;GET&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">}</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 4.5</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">xxx_http_request_duration_seconds_count</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">{verb=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&quot;GET&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">}</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 30</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>指标指定了请求数量、请求总耗时、各个时间区间的请求数量。</p><h3 id="summary-摘要" tabindex="-1"><strong>Summary：摘要</strong> <a class="header-anchor" href="#summary-摘要" aria-label="Permalink to &quot;**Summary：摘要**&quot;">​</a></h3><p>与 Histogram 类型类似，但它直接存储了分位数（quantile），相当于HTTP服务自已本身已经做了一次统计。</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># HELP xxx_http_request_duration_seconds Summary of latencies for HTTP requests.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># TYPE xxx_http_request_duration_seconds summary</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">xxx_http_request_duration_seconds</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">{verb=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&quot;GET&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> quantile=&quot;0.5&quot;}</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.12</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">xxx_http_request_duration_seconds</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">{verb=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&quot;GET&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> quantile=&quot;0.9&quot;}</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.22</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">xxx_http_request_duration_seconds</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">{verb=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&quot;GET&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> quantile=&quot;0.99&quot;}</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.25</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">xxx_http_request_duration_seconds_sum</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">{verb=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&quot;GET&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">}</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 4.5</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">xxx_http_request_duration_seconds_count</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">{verb=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&quot;GET&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">}</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 30</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="参考链接" tabindex="-1">参考链接 <a class="header-anchor" href="#参考链接" aria-label="Permalink to &quot;参考链接&quot;">​</a></h3><p><a href="https://www.zhaowenyu.com/prometheus-doc/promql/what-is-prometheus-metrics-and-labels.html" target="_blank" rel="noreferrer">理解时间序列 · Prometheus</a></p>`,25)]))}const c=a(e,[["render",l]]);export{d as __pageData,c as default};
