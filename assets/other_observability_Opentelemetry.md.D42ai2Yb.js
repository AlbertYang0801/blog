import{_ as t,c as r,o as a,aM as o}from"./chunks/framework.Du1sph90.js";const y=JSON.parse('{"title":"Opentelemetry","description":"","frontmatter":{},"headers":[],"relativePath":"other/observability/Opentelemetry.md","filePath":"other/observability/Opentelemetry.md","lastUpdated":1752827268000}'),n={name:"other/observability/Opentelemetry.md"};function l(p,e,i,m,s,h){return a(),r("div",null,e[0]||(e[0]=[o('<h1 id="opentelemetry" tabindex="-1">Opentelemetry <a class="header-anchor" href="#opentelemetry" aria-label="Permalink to &quot;Opentelemetry&quot;">​</a></h1><p><a href="https://github.com/open-telemetry/docs-cn/blob/main/OT.md" target="_blank" rel="noreferrer">docs-cn/OT.md at main · open-telemetry/docs-cn</a></p><h2 id="opentracing-opencensus" tabindex="-1">OpenTracing&amp;OpenCensus <a class="header-anchor" href="#opentracing-opencensus" aria-label="Permalink to &quot;OpenTracing&amp;OpenCensus&quot;">​</a></h2><ul><li>OpenTracing 制定了一套平台无关、厂商无关的协议标准，使得开发人员能够方便的添加或更换底层 APM 的实现。</li><li>OpenCensus支持Metrics、分布式跟踪。</li></ul><h2 id="opentelemetry-1" tabindex="-1">OpenTelemetry <a class="header-anchor" href="#opentelemetry-1" aria-label="Permalink to &quot;OpenTelemetry&quot;">​</a></h2><p>OpenTelemetry 的核心工作目前主要集中在 3 个部分：</p><ol><li>**规范的制定和协议的统一，规范包含数据传输、API的规范。**协议的统一包含：HTTP W3C的标准支持及GRPC 等框架的协议标准。</li><li>多语言SDK的实现和集成，用户可以使用 SDK 进行代码自动注入和手动埋点，同时对其他三方库（Log4j、LogBack等）进行集成支持；</li><li>数据收集系统的实现，当前是基于 OpenCensus Service 的收集系统，包括 Agent 和 Collector。</li></ol><p>OpenTelemetry 的自身定位很明确：<strong>数据采集和标准规范的统一</strong>，对于数据如何去使用、存储、展示、告警，官方是不涉及的。</p><h2 id="架构" tabindex="-1">架构 <a class="header-anchor" href="#架构" aria-label="Permalink to &quot;架构&quot;">​</a></h2><p><img src="https://s2.loli.net/2025/07/16/cUypDZ6nLvGJM8O.png" alt="image.png" loading="lazy"></p><p><img src="https://s2.loli.net/2025/07/16/ZpNX6LnQY4r1asy.png" alt="image.png" loading="lazy"></p><p>第三方将数据通过 OTLP 协议上报，然后 OTEL Collector 接收数据之后可以转换格式，写入第三方数据源，比如 Prometheus。</p><p><img src="https://s2.loli.net/2025/07/16/kIVHsUcXD9eJ52R.png" alt="image.png" loading="lazy"></p><h2 id="数据格式定义" tabindex="-1">数据格式定义 <a class="header-anchor" href="#数据格式定义" aria-label="Permalink to &quot;数据格式定义&quot;">​</a></h2><ul><li><p>Protobuf格式</p><p><a href="https://github.com/open-telemetry/opentelemetry-proto/blob/main/opentelemetry/proto/metrics/v1/metrics.proto" target="_blank" rel="noreferrer">opentelemetry-proto/metrics.proto at main · open-telemetry/opentelemetry-proto</a></p></li><li><p>Json格式</p><p><a href="https://github.com/open-telemetry/opentelemetry-proto/blob/main/examples/metrics.json" target="_blank" rel="noreferrer">opentelemetry-proto/examples/metrics.json at main · open-telemetry/opentelemetry-proto</a></p></li><li><p>Otel2PrometheusConverter</p><p>Otel 数据转换为 Prometheus 格式数据。</p><p><a href="https://github.com/open-telemetry/opentelemetry-java/blob/main/exporters/prometheus/src/main/java/io/opentelemetry/exporter/prometheus/Otel2PrometheusConverter.java" target="_blank" rel="noreferrer">opentelemetry-java/exporters/prometheus/src/main/java/io/opentelemetry/exporter/prometheus/Otel2PrometheusConverter.java at main · open-telemetry/opentelemetry-java</a></p></li></ul><h2 id="参考文档" tabindex="-1">参考文档 <a class="header-anchor" href="#参考文档" aria-label="Permalink to &quot;参考文档&quot;">​</a></h2><p><a href="https://opentelemetry.io/zh/docs/what-is-opentelemetry/" target="_blank" rel="noreferrer">什么是 OpenTelemetry？</a></p>',17)]))}const u=t(n,[["render",l]]);export{y as __pageData,u as default};
