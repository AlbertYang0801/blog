(window.webpackJsonp=window.webpackJsonp||[]).push([[118],{431:function(t,s,v){"use strict";v.r(s);var a=v(18),r=Object(a.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"缓存淘汰算法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#缓存淘汰算法"}},[t._v("#")]),t._v(" 缓存淘汰算法")]),t._v(" "),s("h2",{attrs:{id:"fifo-先进先出"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#fifo-先进先出"}},[t._v("#")]),t._v(" FIFO-先进先出")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://s2.loli.net/2025/05/29/sBnDWI6qKlCapc1.png",alt:""}})]),t._v(" "),s("p",[t._v("比较简单，不够灵活。")]),t._v(" "),s("p",[t._v("没有跟缓存使用频次和时间等维度联系起来。")]),t._v(" "),s("h2",{attrs:{id:"lru-最近最少使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#lru-最近最少使用"}},[t._v("#")]),t._v(" LRU-最近最少使用")]),t._v(" "),s("p",[t._v("核心思想是"),s("strong",[t._v("最近使用的时间")]),t._v("。比如最近一小时以内使用缓存的时间。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://s2.loli.net/2025/05/29/pIrVCw8Q2GzuUoO.png",alt:""}})]),t._v(" "),s("p",[t._v("根据数据的历史访问记录来淘汰数据，淘汰最久未被使用的数据。")]),t._v(" "),s("p",[t._v("基于"),s("strong",[t._v("如果数据最近被访问过，那么将来访问的记录会更高")]),t._v("。优先淘汰最久未被使用的冷数据。")]),t._v(" "),s("h2",{attrs:{id:"lfu-最近最不常用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#lfu-最近最不常用"}},[t._v("#")]),t._v(" LFU-最近最不常用")]),t._v(" "),s("p",[t._v("核心思想是最近使用的次数。比如最近一小时内使用缓存的次数。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://s2.loli.net/2025/05/29/tNSXLjZzckpP4f9.png",alt:""}})]),t._v(" "),s("p",[t._v("LFU能够提高热点数据的命中率。")]),t._v(" "),s("p",[t._v("但是当缓存中数据都是热点数据的时候，将失去该特性。")]),t._v(" "),s("p",[s("strong",[t._v("单纯的LFU存在缺陷")]),t._v("。")]),t._v(" "),s("p",[t._v("比如目前缓存中都是热点数据，新加进来的缓存没有被访问过，就会被基于访问次数的LFU淘汰。导致新缓存无效。")]),t._v(" "),s("blockquote",[s("p",[t._v("可以为新缓存设置一个中位数的访问次数，防止缓存直接被淘汰。")])]),t._v(" "),s("h2",{attrs:{id:"slru-分段最近最少使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#slru-分段最近最少使用"}},[t._v("#")]),t._v(" SLRU- 分段最近最少使用")]),t._v(" "),s("p",[t._v("LRU算法存在个问题，就是如果元素只被访问一次的情况下，很可能被其它元素挤出去。")]),t._v(" "),s("p",[t._v("比如遇到列表遍历这种写入缓存，很可能把大量缓存挤出去，留下一堆很可能不会再访问的元素在缓存中，导致缓存命中率下降。")]),t._v(" "),s("h3",{attrs:{id:"slru设计"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#slru设计"}},[t._v("#")]),t._v(" SLRU设计")]),t._v(" "),s("p",[t._v("SLRU将缓存分为两段，一段是淘汰段，一段是保护段。两段都基于LRU算法进行淘汰。")]),t._v(" "),s("p",[t._v("访问过一次的元素在访问第二次的时候会放入保护段。")]),t._v(" "),s("p",[t._v("淘汰元素时候只会在淘汰段淘汰。保护段淘汰的元素进入淘汰段。这样能有效保护数据不会被只访问一次的数据给淘汰。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://s2.loli.net/2025/05/29/oFaKrbBGLn8xTvN.png",alt:""}})])])}),[],!1,null,null,null);s.default=r.exports}}]);