(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{346:function(t,e,s){"use strict";s.r(e);var a=s(18),r=Object(a.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"一条更新sql的执行过程"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#一条更新sql的执行过程"}},[t._v("#")]),t._v(" 一条更新SQL的执行过程")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://juejin.cn/post/6920076107609800711#heading-9",target:"_blank",rel:"noopener noreferrer"}},[t._v("juejin.cn"),e("OutboundLink")],1)]),t._v(" "),e("div",{staticClass:"language-java line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-java"}},[e("code",[t._v("mysql"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" update "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("T")]),t._v(" set c"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("c"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" where "),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("ID")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("h2",{attrs:{id:"执行流程"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#执行流程"}},[t._v("#")]),t._v(" 执行流程")]),t._v(" "),e("ol",[e("li",[e("p",[t._v("执行器先找引擎取出 ID=2 这一行记录。")]),t._v(" "),e("ul",[e("li",[t._v("如果该行记录在 "),e("code",[t._v("Buffer Pool")]),t._v(" 中存在，会直接返回数据给执行器。")]),t._v(" "),e("li",[t._v("如果该行记录不存在，则会先进行如下操作，再返回数据给执行器。\n"),e("ul",[e("li",[t._v("从磁盘中查找数据。")]),t._v(" "),e("li",[t._v("将数据写入内存 "),e("code",[t._v("Buffer Pool")]),t._v(" 中。")]),t._v(" "),e("li",[t._v("将数据写入 "),e("code",[t._v("undo.log")]),t._v("（记录 insert、update、delete等修改数据的操作）。")])])])])]),t._v(" "),e("li",[e("p",[t._v("执行器获取到引擎给的行数据，把这条数据更新 c+1，得到新的一行数据，再调用引擎接口写入新数据。")])]),t._v(" "),e("li",[e("p",[t._v("引擎会将新数据写入"),e("code",[t._v("Buffer Pool")]),t._v(" 中，同时将更新的操作记录写入"),e("code",[t._v("redo log buffer")]),t._v("中。然后告知执行器更新完成，可以提交事务。")]),t._v(" "),e("p",[t._v("此时 "),e("code",[t._v("redo log")]),t._v(" 处于 "),e("code",[t._v("prepare")]),t._v("阶段（一阶段提交）。")])]),t._v(" "),e("li",[e("p",[t._v("执行器生成更新操作的 "),e("code",[t._v("bin.log")]),t._v(" 记录，并将 "),e("code",[t._v("bin.log")]),t._v(" 追加到磁盘文件中。")])]),t._v(" "),e("li",[e("p",[t._v("执行器调用引擎的提交事务接口。")]),t._v(" "),e("p",[t._v("引擎把刚才写入到 "),e("code",[t._v("redo.log")]),t._v(" 的状态改为 "),e("code",[t._v("commit")]),t._v(" 状态（二阶段提交），至此更新完成。")])])]),t._v(" "),e("p",[e("img",{attrs:{src:"https://s2.loli.net/2025/06/13/B7FTunfIVkCcdjR.png",alt:""}})]),t._v(" "),e("hr"),t._v(" "),e("h3",{attrs:{id:"执行流程图"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#执行流程图"}},[t._v("#")]),t._v(" 执行流程图")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://s2.loli.net/2025/06/13/jsGzBW5hlZyrfPU.png",alt:""}})])])}),[],!1,null,null,null);e.default=r.exports}}]);