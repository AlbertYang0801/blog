(window.webpackJsonp=window.webpackJsonp||[]).push([[80],{437:function(t,e,r){"use strict";r.r(e);var a=r(26),s=Object(a.a)({},(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"垃圾回收算法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#垃圾回收算法"}},[t._v("#")]),t._v(" 垃圾回收算法")]),t._v(" "),r("ol",[r("li",[t._v("复制算法")]),t._v(" "),r("li",[t._v("标记清除")]),t._v(" "),r("li",[t._v("标记整理")])]),t._v(" "),r("p",[t._v("JVM采用的是分代垃圾回收")]),t._v(" "),r("h3",{attrs:{id:"年轻代"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#年轻代"}},[t._v("#")]),t._v(" 年轻代")]),t._v(" "),r("ul",[r("li",[r("p",[t._v("Young区采用复制算法")]),t._v(" "),r("p",[t._v("类的生命周期较短。")])])]),t._v(" "),r("h3",{attrs:{id:"老年代"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#老年代"}},[t._v("#")]),t._v(" 老年代")]),t._v(" "),r("ul",[r("li",[r("p",[t._v("Old区采用标记清除或者标记整理")]),t._v(" "),r("p",[t._v("在老年代中存储的类生命周期都较长，不适合用复制算法。")])]),t._v(" "),r("li",[r("p",[t._v("新创建的对象默认是会分配到年轻代的Eden区，若是大对象则是直接分配到老年代。")]),t._v(" "),r("p",[t._v("对大对象大小的限制可以指定参数，参数名为： "),r("code",[t._v("-XX:PretenureSizeThreshold")])])])]),t._v(" "),r("h2",{attrs:{id:"参考链接"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#参考链接"}},[t._v("#")]),t._v(" 参考链接")]),t._v(" "),r("p",[r("a",{attrs:{href:"https://juejin.cn/post/6844903909983535111#heading-8",target:"_blank",rel:"noopener noreferrer"}},[t._v("JDK内存模型"),r("OutboundLink")],1)])])}),[],!1,null,null,null);e.default=s.exports}}]);