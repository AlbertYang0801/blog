(window.webpackJsonp=window.webpackJsonp||[]).push([[121],{434:function(t,r,a){"use strict";a.r(r);var e=a(18),n=Object(e.a)({},(function(){var t=this,r=t._self._c;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"concurrenthashmap-1-8"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#concurrenthashmap-1-8"}},[t._v("#")]),t._v(" ConcurrentHashMap -1.8")]),t._v(" "),r("p",[r("a",{attrs:{href:"https://javaguide.cn/java/collection/concurrent-hash-map-source-code.html#_4-get",target:"_blank",rel:"noopener noreferrer"}},[t._v("ConcurrentHashMap 源码分析"),r("OutboundLink")],1)]),t._v(" "),r("p",[r("img",{attrs:{src:"",alt:"image-20250528160131844"}})]),t._v(" "),r("p",[t._v("1.8的ConcurrentHashMap，采用对Node加锁机制。")]),t._v(" "),r("h3",{attrs:{id:"加锁原理"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#加锁原理"}},[t._v("#")]),t._v(" 加锁原理")]),t._v(" "),r("p",[t._v("采用CAS+Synchronized组合锁的方法。")]),t._v(" "),r("ul",[r("li",[r("p",[t._v("CAS")]),t._v(" "),r("p",[t._v("操作Node数组的时候以CAS方式操作。")])]),t._v(" "),r("li",[r("p",[t._v("Synchronized")]),t._v(" "),r("p",[t._v("操作Node对应的数据结构，链表或红黑树的时候加Synchronized。保证操作数据的原子性。")])])])])}),[],!1,null,null,null);r.default=n.exports}}]);