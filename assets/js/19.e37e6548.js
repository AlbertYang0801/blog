(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{375:function(t,a,_){"use strict";_.r(a);var v=_(26),r=Object(v.a)({},(function(){var t=this,a=t.$createElement,_=t._self._c||a;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h1",{attrs:{id:"布隆过滤器"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#布隆过滤器"}},[t._v("#")]),t._v(" 布隆过滤器")]),t._v(" "),_("h2",{attrs:{id:"_1-什么是布隆过滤器"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-什么是布隆过滤器"}},[t._v("#")]),t._v(" 1. 什么是布隆过滤器？")]),t._v(" "),_("p",[t._v("布隆过滤器（Bloom Filter）是一种数据结构，用来"),_("strong",[t._v("判断一个元素是否在一个集合中")]),t._v("。布隆过滤器的本质上使用的是二进制向量和 k 个哈希函数组成。")]),t._v(" "),_("p",[_("strong",[t._v("布隆过滤器具有如下优点。")])]),t._v(" "),_("ul",[_("li",[_("p",[t._v("空间利用率高。")]),t._v(" "),_("p",[t._v("布隆过滤器底层使用二进制向量保存数据，不需要保存元素本身，只需要在指定 bit 存放标识即可，故空间利用率非常高。")]),t._v(" "),_("blockquote",[_("p",[t._v("int 类型占用四个字节，对应 4*8 个 bit，对比能存放 32 个数据。（注意存放的不是元素本身）")])])]),t._v(" "),_("li",[_("p",[t._v("时间效率也较高，插入和查询效率高。插入和查询的时间复杂度均为O(k)；")]),t._v(" "),_("p",[_("em",[t._v("结合布隆过滤器原理的数据结构理解效率高的原因。")])])])]),t._v(" "),_("p",[_("strong",[t._v("同样的，布隆过滤器也存在一些缺点。")])]),t._v(" "),_("ul",[_("li",[_("p",[t._v("存在一定程度的误判。")]),t._v(" "),_("p",[t._v("布隆过滤器主要作用是用来判断一个元素是否在一个集合中，但是存在一定的误判率。")]),t._v(" "),_("p",[t._v("若布隆过滤器判断数据不存在，则一定不存在。")]),t._v(" "),_("p",[t._v("若布隆过滤器判断数据存在，则不一定存在。")])]),t._v(" "),_("li",[_("p",[t._v("不支持删除集合中的元素。")]),t._v(" "),_("p",[t._v("布隆过滤器不支持删除元素。（针对删除元素的优化可见："),_("a",{attrs:{href:"https://cloud.tencent.com/developer/article/1136056",target:"_blank",rel:"noopener noreferrer"}},[t._v("Counting Bloom Filter 的原理和实现"),_("OutboundLink")],1),t._v("）")])])]),t._v(" "),_("h2",{attrs:{id:"_2-为什么使用布隆过滤器"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2-为什么使用布隆过滤器"}},[t._v("#")]),t._v(" 2. 为什么使用布隆过滤器？")]),t._v(" "),_("h3",{attrs:{id:"解决缓存穿透"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#解决缓存穿透"}},[t._v("#")]),t._v(" 解决缓存穿透")]),t._v(" "),_("p",[t._v("布隆过滤器一个经典的应用场景就是用来解决缓存穿透。")]),t._v(" "),_("blockquote",[_("p",[t._v("缓存穿透：当用户请求查询某个数据时，先从缓存查询，缓存中没有这个数据。然后向数据库查询数据，数据库中也没有这个数据，导致查询失败。")])]),t._v(" "),_("p",[_("strong",[t._v("布隆过滤器在 redis 中解决缓存穿透的应用流程")])]),t._v(" "),_("ul",[_("li",[_("p",[t._v("在向缓存中添加数据时，同时向布隆过滤器插入数据。")])]),t._v(" "),_("li",[_("p",[t._v("在向缓存查询数据时，先查询布隆过滤器，判断是否存在数据。")]),t._v(" "),_("p",[t._v("若布隆过滤器中存在，再查询缓存。")]),t._v(" "),_("p",[t._v("若布隆过滤器不存在数据，则不再继续向下查询。")])])]),t._v(" "),_("p",[_("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/AlbertYang0801/pic-bed@main/img/20210812173253.png",alt:"临时文件 (5)"}})]),t._v(" "),_("p",[_("strong",[t._v("结合布隆过滤器的特点，当判断出数据不存在于布隆过滤器时，缓存中一定不存在该数据。就能解决缓存穿透的问题，减少无效请求访问缓存和数据库。")])]),t._v(" "),_("h3",{attrs:{id:"其他应用场景"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#其他应用场景"}},[t._v("#")]),t._v(" 其他应用场景")]),t._v(" "),_("p",[t._v("布隆过滤器除了能够解决缓存穿透的问题之外，还有很多的应用场景。但是前提是这些应用场景能够接受布隆过滤器带来的一定错误率的影响。")]),t._v(" "),_("ul",[_("li",[_("p",[t._v("判断用户名是否重复。")]),t._v(" "),_("p",[t._v("只有当布隆过滤器判断用户名不存在时，才可以使用当前用户名。")])]),t._v(" "),_("li",[_("p",[t._v("垃圾邮件问题。")]),t._v(" "),_("p",[t._v("当判断邮件为垃圾邮件时，指定位添加为 1。不是垃圾邮件时，指定为添加为 0。")]),t._v(" "),_("p",[t._v("这样能确保识别出垃圾邮件，但是存在不是垃圾邮件被识别为垃圾邮件的情况。")])])]),t._v(" "),_("h2",{attrs:{id:"_3-布隆过滤器的原理"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_3-布隆过滤器的原理"}},[t._v("#")]),t._v(" 3. 布隆过滤器的原理")]),t._v(" "),_("h3",{attrs:{id:"数据结构"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#数据结构"}},[t._v("#")]),t._v(" 数据结构")]),t._v(" "),_("h3",{attrs:{id:"存储原理"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#存储原理"}},[t._v("#")]),t._v(" 存储原理")]),t._v(" "),_("h3",{attrs:{id:"为什么会存在误判"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#为什么会存在误判"}},[t._v("#")]),t._v(" 为什么会存在误判？")]),t._v(" "),_("h3",{attrs:{id:"为什么不支持删除"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#为什么不支持删除"}},[t._v("#")]),t._v(" 为什么不支持删除？")]),t._v(" "),_("p",[t._v("https://cloud.tencent.com/developer/article/1136056")]),t._v(" "),_("h2",{attrs:{id:"_4-怎样使用布隆过滤器"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_4-怎样使用布隆过滤器"}},[t._v("#")]),t._v(" 4. 怎样使用布隆过滤器")]),t._v(" "),_("h3",{attrs:{id:"guava"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#guava"}},[t._v("#")]),t._v(" Guava")]),t._v(" "),_("p",[_("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/85042394",target:"_blank",rel:"noopener noreferrer"}},[t._v("结合Guava源码解读布隆过滤器"),_("OutboundLink")],1)]),t._v(" "),_("h2",{attrs:{id:"参考链接"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#参考链接"}},[t._v("#")]),t._v(" 参考链接")]),t._v(" "),_("p",[t._v("https://www.jianshu.com/p/bef2ec1c361f#%E8%AE%BE%E8%AE%A1%E6%80%9D%E6%83%B3")]),t._v(" "),_("p",[t._v("https://blog.csdn.net/weixin_42002367/article/details/107061997")])])}),[],!1,null,null,null);a.default=r.exports}}]);