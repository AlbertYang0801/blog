(window.webpackJsonp=window.webpackJsonp||[]).push([[110],{422:function(a,s,t){"use strict";t.r(s);var n=t(18),e=Object(n.a)({},(function(){var a=this,s=a._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"nacos"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nacos"}},[a._v("#")]),a._v(" Nacos")]),a._v(" "),s("h2",{attrs:{id:"地址"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#地址"}},[a._v("#")]),a._v(" 地址")]),a._v(" "),s("h3",{attrs:{id:"github"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#github"}},[a._v("#")]),a._v(" GitHub")]),a._v(" "),s("p",[s("a",{attrs:{href:"https://github.com/alibaba/nacos",target:"_blank",rel:"noopener noreferrer"}},[a._v("https://github.com/alibaba/nacos"),s("OutboundLink")],1)]),a._v(" "),s("h3",{attrs:{id:"文档"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#文档"}},[a._v("#")]),a._v(" 文档")]),a._v(" "),s("p",[s("a",{attrs:{href:"https://nacos.io/zh-cn/docs/quick-start.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("Nacos 快速开始"),s("OutboundLink")],1)]),a._v(" "),s("h3",{attrs:{id:"启动命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#启动命令"}},[a._v("#")]),a._v(" 启动命令")]),a._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[a._v("sh startup"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("sh "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("m standalone\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("h3",{attrs:{id:"可视化页面"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#可视化页面"}},[a._v("#")]),a._v(" 可视化页面")]),a._v(" "),s("p",[s("a",{attrs:{href:"http://localhost:8848/nacos",target:"_blank",rel:"noopener noreferrer"}},[a._v("http://localhost:8848/nacos"),s("OutboundLink")],1)]),a._v(" "),s("h2",{attrs:{id:"注册中心原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#注册中心原理"}},[a._v("#")]),a._v(" 注册中心原理")]),a._v(" "),s("h3",{attrs:{id:"服务注册"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#服务注册"}},[a._v("#")]),a._v(" 服务注册")]),a._v(" "),s("p",[a._v("Nocas Client 在启动的时候会通过 Rest 的方式将自己的元数据（Ip、端口）等信息发给 Nocas Server。")]),a._v(" "),s("p",[a._v("Nacos Server 收到 Client 的注册请求后，将元数据信息存到内存 Map 中。")]),a._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Map")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("namespace"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Map")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("group"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("::")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("serviceName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Service")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">>")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("K")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("是namespace_id，起到环境隔离的作用\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("V")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("又是一个"),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Map")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Service")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("，代表分组及组内的服务。一个组内可以有多个服务\n  "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("K")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("代表group分组，不过作为key时格式是group_name"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("service_name\n  "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("V")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("服务信息\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br")])]),s("p",[s("img",{attrs:{src:"https://s2.loli.net/2025/06/10/ogPbjMGSs4HUnOL.png",alt:""}})]),a._v(" "),s("h3",{attrs:{id:"服务发现"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#服务发现"}},[a._v("#")]),a._v(" 服务发现")]),a._v(" "),s("ul",[s("li",[a._v("服务消费者（Nacos Client）在调用服务提供者的服务时，会发送一个REST请求给Nacos Server，获取上面注册的服务清单，并且缓存在Nacos Client本地。")]),a._v(" "),s("li",[a._v("同时会在 Nacos Client 本地开启一个定时任务定时拉取服务端最新的注册表信息更新到本地缓存。")])]),a._v(" "),s("h3",{attrs:{id:"心跳同步"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#心跳同步"}},[a._v("#")]),a._v(" 心跳同步")]),a._v(" "),s("ul",[s("li",[s("p",[a._v("在服务注册后，Nacos Client会维护一个定时心跳来持续通知Nacos Server，说明服务一直处于可用状态，防止被剔除。")]),a._v(" "),s("p",[s("strong",[a._v("默认5s发送一次心跳。")])])])]),a._v(" "),s("h3",{attrs:{id:"健康检查"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#健康检查"}},[a._v("#")]),a._v(" 健康检查")]),a._v(" "),s("ul",[s("li",[a._v("Nacos Server会开启一个定时任务用来检查注册服务实例的健康情况，对于超过15s没有收到客户端心跳的实例会将它的 healthy 属性置为false(客户端服务发现时不会发现)。")]),a._v(" "),s("li",[a._v("如果某个实例超过30秒没有收到心跳，直接剔除该实例(被剔除的实例如果恢复发送心跳则会重新注册)")])]),a._v(" "),s("h3",{attrs:{id:"自动配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#自动配置"}},[a._v("#")]),a._v(" 自动配置")]),a._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@Retention")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("RetentionPolicy")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[a._v("RUNTIME")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@Target")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ElementType")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[a._v("TYPE")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ElementType")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[a._v("METHOD")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@ConditionalOnProperty")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("value "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"spring.cloud.nacos.discovery.enabled"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" matchIfMissing "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@interface")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ConditionalOnNacosDiscoveryEnabled")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br")])]),s("h2",{attrs:{id:"配置中心原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#配置中心原理"}},[a._v("#")]),a._v(" 配置中心原理")]),a._v(" "),s("h3",{attrs:{id:"架构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#架构"}},[a._v("#")]),a._v(" 架构")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://s2.loli.net/2025/06/10/HgW34DyQGZNlds5.png",alt:""}})]),a._v(" "),s("p",[a._v("Nacos的模式同时支持CP和AP")]),a._v(" "),s("p",[a._v("配置中心要求高：CP （保证数据一致性）")]),a._v(" "),s("p",[a._v("注册中心要求高：AP （保证服务可用性）")]),a._v(" "),s("h3",{attrs:{id:"实现原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#实现原理"}},[a._v("#")]),a._v(" 实现原理")]),a._v(" "),s("ol",[s("li",[s("strong",[a._v("配置信息存储")]),a._v("：Nacos 默认使用内嵌数据库 Derby 来存储配置信息，还可以采用 MySQL 等关系型数据库。")]),a._v(" "),s("li",[s("strong",[a._v("注册配置信息")]),a._v("：服务启动时，Nacos Client 会向 Nacos Server 注册自己的配置信息，这个注册过程就是把配置信息写入存储，并生成版本号。")]),a._v(" "),s("li",[s("strong",[a._v("获取配置信息")]),a._v("：服务运行期间，Nacos Client 通过 API 从 Nacos Server 获取配置信息。Server 根据键查找对应的配置信息，并返回给 Client。")]),a._v(" "),s("li",[s("strong",[a._v("监听配置变化")]),a._v("："),s("strong",[a._v("Nacos Client 可以通过注册监听器的方式，实现对配置信息的监听")]),a._v("。当配置信息发生变化时，Nacos Server 会通知已注册的监听器，并触发相应的回调方法。")])]),a._v(" "),s("h3",{attrs:{id:"nacos长轮询"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nacos长轮询"}},[a._v("#")]),a._v(" Nacos长轮询")]),a._v(" "),s("p",[a._v("一般来说客户端和服务端的交互分为两种："),s("code",[a._v("推（Push）")]),a._v("和"),s("code",[a._v("拉（Pull）")]),a._v("，Nacos 在"),s("code",[a._v("Pull")]),a._v("的基础上，采用了"),s("strong",[a._v("长轮询来进行配置的动态刷新")]),a._v("。")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://s2.loli.net/2025/06/10/gPq47OAhJsNvBka.png",alt:""}})]),a._v(" "),s("p",[a._v("在长轮询模式下，客户端定时向服务端发起请求，检查配置信息是否发生变更。如果没有变更，服务端会”hold”住这个请求，即暂时不返回结果，直到配置发生变化或达到一定的超时时间。")]),a._v(" "),s("p",[a._v("通过长轮询的方式，Nacos 客户端能够实时感知配置的变化，并及时获取最新的配置信息。同时，这种方式也降低了服务端的压力，避免了大量的长连接占用内存资源。")]),a._v(" "),s("h2",{attrs:{id:"nacos-rabbion"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nacos-rabbion"}},[a._v("#")]),a._v(" Nacos-Rabbion")]),a._v(" "),s("p",[a._v("Nacos 里面集成了 Rabbion")]),a._v(" "),s("h3",{attrs:{id:"实现原理-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#实现原理-2"}},[a._v("#")]),a._v(" 实现原理")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://s2.loli.net/2025/06/10/a1Mmg3sAnwz9I25.png",alt:"image-20250610183342200"}})]),a._v(" "),s("ol",[s("li",[a._v("Nacos Client 从 Nacos Server 获取服务列表，并且维护到了本地。")]),a._v(" "),s("li",[a._v("远程调用时候，以 serverName 发起调用。")]),a._v(" "),s("li",[s("code",[a._v("LoadBalancerInterceptor")]),a._v("会对请求进行拦截，替换 serverName 为真实的地址。")])]),a._v(" "),s("h3",{attrs:{id:"loadbalancer-配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#loadbalancer-配置"}},[a._v("#")]),a._v(" LoadBalancer 配置")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://s2.loli.net/2025/06/10/cNgJbnjzxBaVws6.png",alt:"image-20250610183318593"}})])])}),[],!1,null,null,null);s.default=e.exports}}]);