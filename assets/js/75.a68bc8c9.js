(window.webpackJsonp=window.webpackJsonp||[]).push([[75],{388:function(t,s,a){"use strict";a.r(s);var n=a(18),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"写空闲和读空闲"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#写空闲和读空闲"}},[t._v("#")]),t._v(" 写空闲和读空闲")]),t._v(" "),s("p",[t._v("在Netty框架中，"),s("strong",[t._v("写空闲（Write Idle）")]),t._v(" 和 "),s("strong",[t._v("读空闲（Read Idle）")]),t._v(" 是空闲检测机制中的两个重要概念，它们用于监控网络连接的活跃状态，确保连接的有效性和资源的有效管理。")]),t._v(" "),s("h3",{attrs:{id:"写空闲-write-idle"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#写空闲-write-idle"}},[t._v("#")]),t._v(" 写空闲（Write Idle）")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("定义")]),t._v("：写空闲指的是在一段指定时间内，没有数据通过当前的"),s("code",[t._v("Channel")]),t._v("被写入到网络中传输给对方。这可能意味着在这段时间内，服务端没有向客户端发送任何数据，或者客户端没有向服务端发送数据。")]),t._v(" "),s("li",[s("strong",[t._v("应用场景")]),t._v("：在某些协议或应用场景中，如果长时间没有数据写入，可能需要触发特定的操作，比如"),s("strong",[t._v("发送心跳包以维持连接活跃")]),t._v("，或者是"),s("strong",[t._v("判断连接是否已经失效，进而关闭连接")]),t._v("以释放资源。")])]),t._v(" "),s("h3",{attrs:{id:"读空闲-read-idle"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#读空闲-read-idle"}},[t._v("#")]),t._v(" 读空闲（Read Idle）")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("定义")]),t._v("：读空闲则是指在一段指定时间内，没有从网络中读取到任何数据到当前的"),s("code",[t._v("Channel")]),t._v("中。即使连接是打开的，但如果长时间没有数据可读，也可能意味着连接另一端可能已经断开或者不再发送数据。")]),t._v(" "),s("li",[s("strong",[t._v("应用场景")]),t._v("：读空闲检测可以帮助及时发现并处理“僵尸”连接，即那些虽然建立但不再有数据交互的连接。"),s("strong",[t._v("一旦检测到读空闲，服务端可以主动断开连接，避免资源浪费")]),t._v("。")])]),t._v(" "),s("h3",{attrs:{id:"实现机制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#实现机制"}},[t._v("#")]),t._v(" 实现机制")]),t._v(" "),s("p",[t._v("Netty 提供了 "),s("code",[t._v("IdleStateHandler")]),t._v(" 类来实现空闲检测机制，它作为一个 ChannelHandler 被添加到 ChannelPipeline 中。通过配置不同的超时时间（如读空闲超时、写空闲超时、全空闲超时），可以分别对读、写或两者都无活动的情况做出响应。当触发了任一种空闲状态时，"),s("code",[t._v("IdleStateHandler")]),t._v(" 会向 ChannelPipeline 中的下一个 ChannelInboundHandler 触发一个 "),s("code",[t._v("IdleStateEvent")]),t._v("，对应的处理器可以通过覆盖 "),s("code",[t._v("userEventTriggered")]),t._v(" 方法来捕获并处理这些事件。")]),t._v(" "),s("h3",{attrs:{id:"总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),s("p",[t._v("通过区分写空闲与读空闲，Netty 允许开发者更加精细地控制和管理网络连接的状态，确保系统的稳定性和资源的有效利用。在实际应用中，根据具体需求，可以设置不同的空闲超时策略来应对不同的业务场景。")]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v("    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n     * userEventTriggered 是 Netty 中 ChannelInboundHandler 接口的一个方法，用于处理用户自定义事件\n     * @param ctx\n     * @param evt\n     * @throws Exception\n     */")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("userEventTriggered")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ChannelHandlerContext")]),t._v(" ctx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v(" evt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Exception")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("evt "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IdleStateEvent")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("FIRST_WRITER_IDLE_STATE_EVENT")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyMessage")]),t._v(" heartBeat "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("buildHeatBeat")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            log"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("debug")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"写空闲，发出心跳报文维持连接： "')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" heartBeat"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            ctx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("writeAndFlush")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("heartBeat"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("super")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("userEventTriggered")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ctx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" evt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br")])])])}),[],!1,null,null,null);s.default=e.exports}}]);