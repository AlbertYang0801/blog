(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{389:function(t,e,r){"use strict";r.r(e);var a=r(40),n=Object(a.a)({},(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h3",{attrs:{id:"jdk对线程池的支持"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#jdk对线程池的支持"}},[t._v("#")]),t._v(" JDK对线程池的支持")]),t._v(" "),r("hr"),t._v(" "),r("p",[r("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/AlbertYang0801/pic-bed@main/img/20210218105938.png",alt:"imgae/ThreadPoolExecutor.png"}})]),t._v(" "),r("p",[t._v("ThreadPoolExecutor表示一个线程池，里面包含了创建线程池的实现。")]),t._v(" "),r("p",[r("a",{attrs:{href:"jetbrains://idea/navigate/reference?project=concurrent-practice&fqn=java.util.concurrent.Executors"}},[t._v("java.util.concurrent.Executors")])]),t._v(" "),r("p",[t._v("Executors是一个线程池工厂，可以通过它获取一个具有特定功能的线程池。")])])}),[],!1,null,null,null);e.default=n.exports}}]);