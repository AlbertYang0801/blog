(window.webpackJsonp=window.webpackJsonp||[]).push([[81],{394:function(s,t,a){"use strict";a.r(t);var n=a(18),r=Object(n.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"synchronized原理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#synchronized原理"}},[s._v("#")]),s._v(" synchronized原理")]),s._v(" "),t("p",[t("a",{attrs:{href:"https://blog.csdn.net/qq_43061290/article/details/124187639",target:"_blank",rel:"noopener noreferrer"}},[s._v("synchronized原理详解（通俗易懂超级好）-CSDN博客"),t("OutboundLink")],1)]),s._v(" "),t("h2",{attrs:{id:"特性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#特性"}},[s._v("#")]),s._v(" 特性")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("原子性")]),s._v(" "),t("p",[s._v("synchronized 修饰的对象或类所有操作都是原子性的。线程需要获取锁，保证整个操作过程的原子性。")]),s._v(" "),t("p",[s._v("比如 i++这种赋值操作。")])]),s._v(" "),t("li",[t("p",[s._v("可见性")]),s._v(" "),t("p",[s._v("一个线程如果要访问该类或对象必须先获得它的锁，而这个"),t("strong",[s._v("锁的状态对于其他任何线程都是可见")]),s._v("的，并且在"),t("strong",[s._v("释放锁之前会将对变量的修改刷新到主存当中")]),s._v("，"),t("strong",[s._v("保证资源变量的可见性。")])]),s._v(" "),t("p",[s._v("如果某个线程占用了该锁，其他线程就必须在锁池中等待锁的释放。")])]),s._v(" "),t("li",[t("p",[s._v("有序性")]),s._v(" "),t("p",[s._v("保证只有一个线程访问，确保了有序性。")])]),s._v(" "),t("li",[t("p",[s._v("可重入性")]),s._v(" "),t("p",[s._v("支持同一个线程对资源的重复加锁。")])])]),s._v(" "),t("h3",{attrs:{id:"synchronized和volatile区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#synchronized和volatile区别"}},[s._v("#")]),s._v(" synchronized和volatile区别")]),s._v(" "),t("ol",[t("li",[s._v("都具备可见性。")]),s._v(" "),t("li",[s._v("都具备有序性。")]),s._v(" "),t("li",[s._v("synchronized 具备原子性，但是volatile 不具备原子性。")])]),s._v(" "),t("hr"),s._v(" "),t("h3",{attrs:{id:"volatile"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#volatile"}},[s._v("#")]),s._v(" volatile")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("可见性")]),s._v(" "),t("p",[s._v("被volatile修饰的变量，每当"),t("strong",[s._v("值需要修改时都会立即更新主存")]),s._v("，"),t("strong",[s._v("主存是共享的")]),s._v("，所有线程可见，所以确保了其他线程读取到的变量永远是最新值，保证可见性。")])]),s._v(" "),t("li",[t("p",[s._v("有序性")]),s._v(" "),t("p",[t("strong",[s._v("禁止指令重排")]),s._v("，保证指令有序性。")])])]),s._v(" "),t("h2",{attrs:{id:"用法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#用法"}},[s._v("#")]),s._v(" 用法")]),s._v(" "),t("h3",{attrs:{id:"同步代码块"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#同步代码块"}},[s._v("#")]),s._v(" 同步代码块")]),s._v(" "),t("p",[s._v("重点是保证多个线程的锁对象是一致的。")]),s._v(" "),t("ul",[t("li",[s._v("this作为锁对象")])]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//this的锁对象指当前类的实例")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("synchronized")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    i"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("ul",[t("li",[s._v("当前类作为锁对象")])]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//使用当前类作为锁对象")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("synchronized")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("SynchrodizedCodebolck")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    x"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("ul",[t("li",[s._v("不变对象作为锁对象")])]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("final")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Object")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("OBJECT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Object")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//正确使用对象作为锁")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("synchronized")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("OBJECT")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("hr"),s._v(" "),t("h3",{attrs:{id:"同步方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#同步方法"}},[s._v("#")]),s._v(" 同步方法")]),s._v(" "),t("p",[s._v("synchronized 加在普通方法上或者静态方法上，可实现同步方法。")]),s._v(" "),t("ul",[t("li",[s._v("同步普通方法 普通同步方法，锁对象为当前类的实例对象等同于this。")])]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[s._v("    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("synchronized")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("increaseI")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        i"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    等价于\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("increase")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("synchronized")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            i"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br")])]),t("ul",[t("li",[s._v("同步静态方法 静态同步方法，锁对象为当前类对象")])]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[s._v("    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("synchronized")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("increaseM")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        m"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    等价于\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("increase")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("synchronized")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("NumberOperatingStatic")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            m"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br")])]),t("h2",{attrs:{id:"底层原理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#底层原理"}},[s._v("#")]),s._v(" 底层原理")]),s._v(" "),t("h3",{attrs:{id:"实例对象头"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#实例对象头"}},[s._v("#")]),s._v(" 实例对象头")]),s._v(" "),t("p",[s._v("堆里面的对象包含三部分：")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("对象头")]),s._v(" "),t("ol",[t("li",[t("p",[s._v("Mark Word：存储的是对象的 hashCode、"),t("strong",[s._v("锁信息")]),s._v("、或分代年龄、GC标注等信息。")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://s2.loli.net/2025/05/28/wEZqSUj4CBtlibD.png",alt:"image-20250528163142320"}})])]),s._v(" "),t("li",[t("p",[s._v("Class Metadata Address： "),t("strong",[s._v("存储对象所属类(元数据) 的指针")]),s._v("，JVM通过这个确定这个对象属于哪个类。")])])])]),s._v(" "),t("li",[t("p",[s._v("对象实例数据")])]),s._v(" "),t("li",[t("p",[s._v("对齐填充")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://s2.loli.net/2025/05/28/jIr2yAmUBJegiRc.png",alt:"image-20250528163154481"}})])])]),s._v(" "),t("h3",{attrs:{id:"monitor对象-重量级锁"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#monitor对象-重量级锁"}},[s._v("#")]),s._v(" Monitor对象（重量级锁）")]),s._v(" "),t("p",[s._v("每一个锁都对应一个"),t("strong",[s._v("Monitor对象")]),s._v("，每个对象都有一个与之关联的Monitor对象，在HotSpot虚拟机中它是由ObjectMonitor实现的(C++实现)。")]),s._v(" "),t("p",[s._v("Monitor 对象"),t("strong",[s._v("存在于每个Java对象的对象头里")]),s._v(" (存储的指针的指向)。")]),s._v(" "),t("blockquote",[t("p",[s._v("当一个线程执行synchronized(obj)这段代码时，obj对象就会与操作系统提供的Monitor对象相关联，即用一个指针指向Monitor 对象，其地址存储在MarkWord里。")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("//详细介绍重要变量的作用\nObjectMonitor() {\n    _header       = NULL;\n    _count        = 0;   // 重入次数\n    _waiters      = 0,   // 等待线程数\n    _recursions   = 0;\n    _object       = NULL;\n    _owner        = NULL;  // 当前持有锁的线程\n    _WaitSet      = NULL;  // 调用了 wait 方法的线程被阻塞 放置在这里\n    _WaitSetLock  = 0 ;\n    _Responsible  = NULL ;\n    _succ         = NULL ;\n    _cxq          = NULL ;\n    FreeNext      = NULL ;\n    _EntryList    = NULL ; // 等待锁 处于block的线程 有资格成为候选资源的线程\n    _SpinFreq     = 0 ;\n    _SpinClock    = 0 ;\n    OwnerIsThread = 0 ;\n  }\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br")])]),t("ul",[t("li",[t("p",[t("code",[s._v("_owner")]),s._v("：指向获得 "),t("code",[s._v("ObjectMonitor")]),s._v(" 对象的线程。（即获得锁的线程）")])]),s._v(" "),t("li",[t("p",[t("code",[s._v("_EntryList")]),s._v("：处于等待锁 "),t("code",[s._v("block")]),s._v(" 状态的线程，会被加入到这里。")])]),s._v(" "),t("li",[t("p",[t("code",[s._v("_WaitSet")]),s._v("：处理 "),t("code",[s._v("wait")]),s._v(" 状态的线程，会被加入到这里。（调用同步对象 "),t("code",[s._v("wait")]),s._v(" 方法）")]),s._v(" "),t("blockquote",[t("p",[s._v("wati状态线程已经获取锁然后主动等待，在业务完成后，等待 notify 唤醒。block 是阻塞状态，指的是没获取到锁。")])])])]),s._v(" "),t("blockquote",[t("p",[s._v("这里 synchronized 是以 monitor 对象为基础实现的同步，加锁的对象里面存了指向 monitor 对象的指针。而在并发情况下时，线程会竞争 monitor，只有竞争到monitor 的才持有锁。其它线程会进入 wait 或者 block 状态。")])]),s._v(" "),t("h2",{attrs:{id:"锁升级"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#锁升级"}},[s._v("#")]),s._v(" 锁升级")]),s._v(" "),t("p",[s._v("无锁 < 偏向锁 < 轻量级锁 < 重量级锁")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://s2.loli.net/2025/05/28/CQpo2cP4rubh3kN.png",alt:"image-20250528163326356"}})]),s._v(" "),t("h3",{attrs:{id:"重量级锁"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#重量级锁"}},[s._v("#")]),s._v(" 重量级锁")]),s._v(" "),t("p",[s._v("monitor 是互斥锁，持有锁线程会阻塞其它线程。是一个重量级锁。")]),s._v(" "),t("p",[t("strong",[s._v("缺点是线程开销很大。")])]),s._v(" "),t("blockquote",[t("p",[s._v("在线程获取锁之后，会阻塞其它需要锁的线程。线程阻塞情况下是不消耗资源的，但是将线程阻塞和将线程唤醒的过程是比较消耗资源的。因为线程是系统资源，需要从用户态切换到用户态执行阻塞和唤醒。")])]),s._v(" "),t("p",[s._v("原理就是依赖锁的 moniotr对象来保证只有一个线程能获取锁，而且会阻塞其它线程。")]),s._v(" "),t("h3",{attrs:{id:"偏向锁"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#偏向锁"}},[s._v("#")]),s._v(" 偏向锁")]),s._v(" "),t("p",[s._v("偏向锁假定将来只有第一个申请锁的线程会使用锁。")]),s._v(" "),t("p",[s._v("只需要在对象头的 Mark Word 中进行一次 CAS 记录 owner。")]),s._v(" "),t("p",[s._v("如果记录成功，则偏向锁获取成功，记录"),t("strong",[s._v("锁状态为偏向锁")]),s._v("，以后当前线程等于owner就可以零成本的直接获得锁；否则，说明有其他线程竞争，升级"),t("strong",[s._v("为轻量级锁")]),s._v("。")]),s._v(" "),t("h3",{attrs:{id:"为什么要引入偏向锁"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#为什么要引入偏向锁"}},[s._v("#")]),s._v(" 为什么要引入偏向锁")]),s._v(" "),t("p",[s._v("引入偏向锁是为了在"),t("strong",[s._v("无多线程竞争的情况下尽量减少不必要")]),s._v("的CAS 操作，因为轻量级锁的获取及释放"),t("strong",[s._v("依赖多次 CAS 原子指令")]),s._v("，而偏向锁只需要在置换 ThreadID 的时候依赖一次 CAS 原子指令，代价就是一旦出现多线程竞争的情况就必须撤销偏向锁。")]),s._v(" "),t("h3",{attrs:{id:"轻量级锁"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#轻量级锁"}},[s._v("#")]),s._v(" 轻量级锁")]),s._v(" "),t("p",[s._v("当有别的线程参与到偏向锁的竞争中时，会先判断 markword 中的线程ID与这个线程是否一致，如果不一致，则会立即撤销偏向锁，升级为"),t("strong",[s._v("轻量级锁")]),s._v("。")]),s._v(" "),t("h3",{attrs:{id:"加锁原理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#加锁原理"}},[s._v("#")]),s._v(" 加锁原理")]),s._v(" "),t("p",[s._v("每个线程都会在自己的栈中维护一个 "),t("code",[s._v("LockRecord(LR)")]),s._v("，然后每个线程在竞争锁时，都试图将锁对象头中的"),t("code",[s._v("markword")]),s._v(" 设置为指向自己LR的指针，哪个线程设置成功，则意味着哪个线程成功获取到锁。")]),s._v(" "),t("p",[t("strong",[s._v("Lock record就是栈中的锁记录。")])]),s._v(" "),t("p",[s._v("轻量级锁是多线程并发的，如果获取锁失败，表示有其他线程竞争锁，当前线程便"),t("strong",[s._v("尝试使用自旋来获取锁")]),s._v("。如果在"),t("strong",[s._v("自旋一定次数后仍未获得锁，那么轻量级锁将会升级成重量级锁")]),s._v("。")]),s._v(" "),t("blockquote",[t("p",[s._v("当线程的自旋次数过长依旧没获取到锁，为避免CPU无端耗费，锁由轻量级锁升级为重量级锁。")])]),s._v(" "),t("p",[t("img",{attrs:{src:"https://s2.loli.net/2025/05/28/wEZqSUj4CBtlibD.png",alt:"image-20250528163340960"}})]),s._v(" "),t("h2",{attrs:{id:"可见性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#可见性"}},[s._v("#")]),s._v(" 可见性")]),s._v(" "),t("h3",{attrs:{id:"synchronized怎么保证可见性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#synchronized怎么保证可见性"}},[s._v("#")]),s._v(" synchronized怎么保证可见性")]),s._v(" "),t("p",[s._v("在Java内存模型（JMM）中，每个线程都有自己的工作内存，里面保存了使用变量的副本。")]),s._v(" "),t("p",[s._v("主内存保存着原始变量。")]),s._v(" "),t("p",[s._v("当代码进入 synchronized 快时，会从主内存加载最新变量到工作内存。而结束之后会把工作内存的变量刷新回主内存。")]),s._v(" "),t("p",[s._v("这样就保证了可见性。")])])}),[],!1,null,null,null);t.default=r.exports}}]);