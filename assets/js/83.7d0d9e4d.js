(window.webpackJsonp=window.webpackJsonp||[]).push([[83],{443:function(s,t,a){"use strict";a.r(t);var n=a(26),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"jvm内存模型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#jvm内存模型"}},[s._v("#")]),s._v(" JVM内存模型")]),s._v(" "),a("p",[s._v("Java 内存模型在 JDK1.7 主要包含以下区域。")]),s._v(" "),a("ul",[a("li",[s._v("程序计数器")]),s._v(" "),a("li",[s._v("虚拟机栈")]),s._v(" "),a("li",[s._v("本地方法栈")]),s._v(" "),a("li",[s._v("方法区")]),s._v(" "),a("li",[s._v("堆")])]),s._v(" "),a("p",[s._v("而在 JDK1.8中将运行时数据区中的方法区给取消了，换成了本地内存中的元数据区。")]),s._v(" "),a("ul",[a("li",[s._v("程序计数器")]),s._v(" "),a("li",[s._v("虚拟机栈")]),s._v(" "),a("li",[s._v("本地方法栈")]),s._v(" "),a("li",[s._v("堆")]),s._v(" "),a("li",[s._v("元数据区")])]),s._v(" "),a("h2",{attrs:{id:"内存模型图"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#内存模型图"}},[s._v("#")]),s._v(" 内存模型图")]),s._v(" "),a("ol",[a("li",[s._v("JDK 1.7 内存模型图")])]),s._v(" "),a("p",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/AlbertYang0801/pic-bed@main/img/20210611155359.png",alt:""}})]),s._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[a("p",[s._v("JDK 1.8 内存模型图")]),s._v(" "),a("p",[s._v("JDK1.8中取消了运行时数据区中的方法区，换成了元数据区放到了本地内存里。")])])]),s._v(" "),a("p",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/AlbertYang0801/pic-bed@main/img/20210611160927.png",alt:""}})]),s._v(" "),a("h2",{attrs:{id:"运行时数据区"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#运行时数据区"}},[s._v("#")]),s._v(" 运行时数据区")]),s._v(" "),a("h3",{attrs:{id:"_1、程序计数器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、程序计数器"}},[s._v("#")]),s._v(" 1、程序计数器")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("作用")]),s._v(" "),a("p",[s._v("程序计数器作用是"),a("strong",[s._v("保存程序要执行的下一条指令的地址")]),s._v("。")])]),s._v(" "),a("li",[a("p",[s._v("特点")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("程序计数器是是"),a("strong",[s._v("线程私有")]),s._v("的，各个线程之间互不影响。")])]),s._v(" "),a("li",[a("p",[s._v("程序计数器是 JVM 中唯一没有规定 "),a("code",[s._v("OutOfMemoryError")]),s._v(" 情况的区域。")]),s._v(" "),a("p",[s._v("由于程序计数器保存的数据占用空间不会随程序执行而改变，所以程序计数器是内存区域中没有规定 "),a("code",[s._v("OutOfMemoryError")]),s._v(" 情况的区域。")])])])]),s._v(" "),a("li",[a("p",[s._v("注意")]),s._v(" "),a("ul",[a("li",[s._v("如果线程执行的是非 native 方法，则程序计数器保存的是下一条执行的指令地址。")]),s._v(" "),a("li",[s._v("如果线程执行的是 native 方法，则程序计数器中的值是 undefined。")])])])]),s._v(" "),a("h3",{attrs:{id:"_2、虚拟机栈"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、虚拟机栈"}},[s._v("#")]),s._v(" 2、虚拟机栈")]),s._v(" "),a("p",[s._v("虚拟机栈是常说的栈内存，是 Java 方法执行的区域。")]),s._v(" "),a("h4",{attrs:{id:"栈帧"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#栈帧"}},[s._v("#")]),s._v(" 栈帧")]),s._v(" "),a("p",[s._v("虚拟机栈存放的是一个个"),a("code",[s._v("栈帧")]),s._v("，每个栈帧对应一个调用的方法。"),a("strong",[s._v("虚拟机栈是线程私有的，每个线程都有自己的虚拟机栈")]),s._v("，保存了线程私有的 Java 方法。")]),s._v(" "),a("p",[a("strong",[s._v("栈帧")]),s._v(" 包含 "),a("strong",[s._v("局部变量表、操作数栈、指向运行时常量池的引用、方法返回地址、附加信息")]),s._v("。")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/AlbertYang0801/pic-bed@main/img/Snipaste_2021-06-16_22-44-43.png",alt:""}})]),s._v(" "),a("ul",[a("li",[a("p",[s._v("局部变量表")]),s._v(" "),a("blockquote",[a("p",[s._v("主要用来保存方法中的局部变量，包含方法中声明的非静态变量和函数形参。")])]),s._v(" "),a("ul",[a("li",[s._v("基本数据类型保存的是"),a("strong",[s._v("值")]),s._v("。")]),s._v(" "),a("li",[s._v("引用类型保存的是"),a("strong",[s._v("对象引用地址")]),s._v("。")])]),s._v(" "),a("p",[s._v("局部变量表的大小在编译器可以指定其大小，因此在程序执行期间局部变量表的大小是不会改变的。")])]),s._v(" "),a("li",[a("p",[s._v("操作数栈")]),s._v(" "),a("blockquote",[a("p",[s._v("是方法中进行数据运算的地方。用来计算表达式求值，程序中的计算过程都是借助于操作数栈来完成的。")])])]),s._v(" "),a("li",[a("p",[s._v("指向引用时常量池的引用")]),s._v(" "),a("blockquote",[a("p",[s._v("因为在方法执行的过程中可能需要用到类中的变量，所以每个方法也就是栈帧需要保存一个执行运行时常量的引用。")])]),s._v(" "),a("p",[s._v("运行时常量池在方法区中。")])]),s._v(" "),a("li",[a("p",[s._v("方法返回地址")]),s._v(" "),a("blockquote",[a("p",[s._v("在线程中，每个方法执行完成之后，需要返回到之前调用它的地方。所以在栈帧中需要保存方法的返回地址。由于每个线程执行的方法可能不同，所以每个线程都要有一个自己的虚拟机栈。")])])])]),s._v(" "),a("h4",{attrs:{id:"执行过程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#执行过程"}},[s._v("#")]),s._v(" 执行过程")]),s._v(" "),a("p",[s._v("当线程执行一个方法的时候，对应创建一个栈帧压栈。当方法执行完毕之后，便会将栈帧出栈。"),a("strong",[s._v("线程当前执行的方法必定位于虚拟机栈的顶部。")])]),s._v(" "),a("p",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/AlbertYang0801/pic-bed@main/img/image-20220403112944069.png",alt:"image-20220403112944069"}})]),s._v(" "),a("p",[s._v("在该区域会发生两种异常：")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("如果线程请求的栈大于虚拟机允许的深度，会抛出 "),a("code",[s._v("StackOverFlowError")]),s._v(" 异常。")])]),s._v(" "),a("li",[a("p",[s._v("如果虚拟机栈可以动态扩展，当扩展到无法申请到足够内存时，就会抛出 "),a("code",[s._v("OutOfMemoryError")]),s._v(" 异常。")])])]),s._v(" "),a("h4",{attrs:{id:"问题分析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#问题分析"}},[s._v("#")]),s._v(" 问题分析")]),s._v(" "),a("ol",[a("li",[a("p",[s._v("垃圾回收是否涉及栈内存？")]),s._v(" "),a("p",[s._v("不涉及栈内存，垃圾回收只涉及存放对象的堆内存。")]),s._v(" "),a("p",[s._v("栈内存存放的是调用方法信息，不需要垃圾回收。")])]),s._v(" "),a("li",[a("p",[s._v("栈内存分配越大越好吗？")]),s._v(" "),a("p",[s._v("栈内存大小在 linux 系统下为 1m。")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/AlbertYang0801/pic-bed@main/img/image-20220403114321482.png",alt:"image-20220403114321482"}})]),s._v(" "),a("p",[s._v("由于物理内存是一定的，假设为 500m，而虚拟机方法栈是"),a("strong",[s._v("每个线程私有")]),s._v("的。在栈内存大小 1m 的情况，可以分配 500个线程**。若增大栈内存，则线程数会随之减少**。")]),s._v(" "),a("p",[s._v("所以栈内存并不是越大越好，一般使用系统默认的 1m 即可（windows系统除外）。")])]),s._v(" "),a("li",[a("p",[s._v("方法内的局部变量是否线程安全？")]),s._v(" "),a("p",[s._v("方法内的局部变量存在于虚拟机方法栈中，是线程私有的，所以是线程安全的。")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("LocalVariable")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("implements")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Runnable")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Override")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("run")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" x "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            x"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ExecutorService")]),s._v(" executorService "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Executors")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("newFixedThreadPool")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("i"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("i"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            executorService"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("submit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("LocalVariable")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n        executorService"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("shutdown")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//5000")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//5000")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br")])]),a("p",[s._v("注意："),a("strong",[s._v("全局静态变量位于方法区，存在线程安全问题。")])]),s._v(" "),a("hr"),s._v(" "),a("ul",[a("li",[a("p",[s._v("如果方法内的局部变量没有逃离方法，在方法内使用，那么它就是线程安全的。")])]),s._v(" "),a("li",[a("p",[s._v("如果局部变量"),a("strong",[s._v("引用")]),s._v("了其它对象，并且逃离了方法的作用范围，需要考虑安全问题。")]),s._v(" "),a("div",{staticClass:"language-JAVA line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[s._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n     * 线程不安全\n     */")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("StringBuffer")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("test2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("StringBuffer")]),s._v(" stringBuffer "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("StringBuffer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        stringBuffer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("append")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        stringBuffer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("append")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"2"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        stringBuffer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("append")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"3"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" stringBuffer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\t\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//其它方法引用了该方法，需要考虑变量的线程安全问题。")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@SneakyThrows")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//引用对象")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("StringBuffer")]),s._v(" stringBuffer "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("test2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("i"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("i"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Thread")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                stringBuffer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("append")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"o"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("start")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Thread")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sleep")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("stringBuffer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br")])])])])])]),s._v(" "),a("h4",{attrs:{id:"模拟栈溢出"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#模拟栈溢出"}},[s._v("#")]),s._v(" 模拟栈溢出")]),s._v(" "),a("ol",[a("li",[a("p",[a("strong",[s._v("栈帧过多")]),s._v("导致栈内存溢出")]),s._v(" "),a("p",[s._v("两个方法相互调用，导致虚拟机栈不断地压栈，最终抛出 "),a("code",[s._v("StackOverFlowError")]),s._v(" 异常。")]),s._v(" "),a("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://cdn.jsdelivr.net/gh/AlbertYang0801/pic-bed@main/img/image-20220403112713262.png",alt:"image-20220403112713262"}})]),s._v(" "),a("li",[a("p",[a("strong",[s._v("栈帧过大")]),s._v("导致栈内存溢出")])])]),s._v(" "),a("h4",{attrs:{id:"调整栈内存大小"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#调整栈内存大小"}},[s._v("#")]),s._v(" 调整栈内存大小")]),s._v(" "),a("p",[a("strong",[s._v("-Xss256k：调整栈内存大小为 256k。")])]),s._v(" "),a("p",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/AlbertYang0801/pic-bed@main/img/image-20220403123026146.png",alt:"image-20220403123026146"}})]),s._v(" "),a("h3",{attrs:{id:"_3、本地方法栈"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3、本地方法栈"}},[s._v("#")]),s._v(" 3、本地方法栈")]),s._v(" "),a("p",[s._v("本地方法栈和虚拟机栈的作用很相似，虚拟机栈为虚拟机执行 Java 方法，而本地方法栈则为 Java 方法使用到的本地方法服务（navite 方法）。")]),s._v(" "),a("p",[a("strong",[s._v("相同的本地方法栈也可能抛出 "),a("code",[s._v("StackOverFlowError")]),s._v(" 和 "),a("code",[s._v("OutOfMemoryError")]),s._v(" 异常")]),s._v("。")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/AlbertYang0801/pic-bed@main/img/123.png",alt:""}})]),s._v(" "),a("hr"),s._v(" "),a("p",[s._v("Thread 类中就存在很多 native 方法。")]),s._v(" "),a("img",{staticStyle:{zoom:"80%"},attrs:{src:"https://cdn.jsdelivr.net/gh/AlbertYang0801/pic-bed@main/img/image-20220403151146870.png",alt:"image-20220403151146870"}}),s._v(" "),a("h3",{attrs:{id:"_4、堆"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4、堆"}},[s._v("#")]),s._v(" 4、堆")]),s._v(" "),a("p",[s._v("堆是 JVM 内存管理最大的一块区域，堆存放的是内存的实例，所有对象实例都要在堆上分配内存。Java 堆可以处于物理上不连续的空间，只要逻辑上是连续的即可。")]),s._v(" "),a("p",[s._v("堆空间是"),a("strong",[s._v("线程共享")]),s._v("的一个区域，堆中的对象都要"),a("strong",[s._v("考虑线程安全问题")]),s._v("。")]),s._v(" "),a("p",[s._v("若堆内存不足以创建新对象实例时，将抛出 "),a("code",[s._v("OutOfMemoryError")]),s._v(" 异常。")]),s._v(" "),a("h4",{attrs:{id:"堆空间划分"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#堆空间划分"}},[s._v("#")]),s._v(" 堆空间划分")]),s._v(" "),a("p",[s._v("堆是"),a("strong",[s._v("垃圾收集器的主要管理区域")]),s._v("，为了支持垃圾回收，堆被划分为三个区域。")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("年轻代")]),s._v(" "),a("p",[s._v("年轻代被划分为 "),a("strong",[s._v("Eden区、S1区和 S2区")]),s._v("（空间分配比例是 8:1:1）。")])]),s._v(" "),a("li",[a("p",[s._v("老年代")])]),s._v(" "),a("li",[a("p",[s._v("永久代（JDK 1.8 已经移除永久代）")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/AlbertYang0801/pic-bed@main/img/image-20220403151829538.png",alt:"image-20220403151829538"}})])])]),s._v(" "),a("h4",{attrs:{id:"调整堆内存大小"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#调整堆内存大小"}},[s._v("#")]),s._v(" 调整堆内存大小")]),s._v(" "),a("p",[s._v("通过配置 "),a("code",[s._v("-Xmx1024m")]),s._v(" 参数可以修改并指定堆内存大小。")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/AlbertYang0801/pic-bed@main/img/image-20220403153044249.png",alt:"image-20220403153044249"}})]),s._v(" "),a("h4",{attrs:{id:"模拟堆内存溢出"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#模拟堆内存溢出"}},[s._v("#")]),s._v(" 模拟堆内存溢出")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[s._v("    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@SneakyThrows")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("try")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("List")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" list "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ArrayList")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hello"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                list"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n                "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//字符串翻倍增长，占满堆内存")]),s._v("\n                a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n                i"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n                "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("catch")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Exception")]),s._v(" e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("printStackTrace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Thread")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sleep")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br")])]),a("p",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/AlbertYang0801/pic-bed@main/img/image-20220403153200049.png",alt:"image-20220403153200049"}})]),s._v(" "),a("h4",{attrs:{id:"堆内存诊断"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#堆内存诊断"}},[s._v("#")]),s._v(" 堆内存诊断")]),s._v(" "),a("ol",[a("li",[a("p",[a("strong",[s._v("jmap")]),s._v(" 工具")]),s._v(" "),a("blockquote",[a("p",[s._v("jmap 只能查看某个时刻的数据。")])]),s._v(" "),a("ul",[a("li",[a("p",[s._v("使用 jps 查出进程 Id")])]),s._v(" "),a("li",[a("p",[s._v("使用 jmap 分析堆内存")]),s._v(" "),a("div",{staticClass:"language-JAVA line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Jmap")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("heap pid\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("新建一个 10MB 的数组，对进程分析得出得出的结果如下：")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("Heap Configuration:\n   MinHeapFreeRatio         "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n   MaxHeapFreeRatio         "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),s._v("\n   MaxHeapSize              "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4259315712")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4062")]),s._v(".0MB"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n   NewSize                  "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("88604672")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("84")]),s._v(".5MB"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n   MaxNewSize               "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1419771904")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1354")]),s._v(".0MB"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n   OldSize                  "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("177733632")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("169")]),s._v(".5MB"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n   NewRatio                 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("\n   SurvivorRatio            "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),s._v("\n   MetaspaceSize            "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("21807104")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),s._v(".796875MB"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n   CompressedClassSpaceSize "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1073741824")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1024")]),s._v(".0MB"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n   MaxMetaspaceSize         "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("17592186044415")]),s._v(" MB\n   G1HeapRegionSize         "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(".0MB"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\nHeap Usage:\nPS Young Generation\nEden Space:\t\t//年轻代：新创建的对象分配到年轻代\n   capacity "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("66584576")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("63")]),s._v(".5MB"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\t\n   used     "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("18496920")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("17")]),s._v(".640037536621094MB"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\t//堆内存eden区使用17MB（原使用7MB）\n   "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("free")]),s._v("     "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("48087656")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("45")]),s._v(".859962463378906MB"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("27.779586671844243")]),s._v("% used\nFrom Space:\n   capacity "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("11010048")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v(".5MB"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n   used     "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(".0MB"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n   "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("free")]),s._v("     "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("11010048")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v(".5MB"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.0")]),s._v("% used\nTo Space:\n   capacity "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("11010048")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v(".5MB"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n   used     "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(".0MB"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n   "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("free")]),s._v("     "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("11010048")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v(".5MB"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.0")]),s._v("% used\nPS Old Generation\t//老年代：大对象直接放入老年代；年轻代中多次GC存活下来的对象转移到老年代。\n   capacity "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("177733632")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("169")]),s._v(".5MB"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\t\n   used     "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(".0MB"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n   "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("free")]),s._v("     "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("177733632")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("169")]),s._v(".5MB"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.0")]),s._v("% used\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br")])])])])]),s._v(" "),a("li",[a("p",[s._v("使用 "),a("strong",[s._v("jconsole")]),s._v(" 工具")]),s._v(" "),a("blockquote",[a("p",[s._v("选择指定的类进行分析，jconsole 工具分析的是连续的数据。")])]),s._v(" "),a("p",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/AlbertYang0801/pic-bed@main/img/image-20220403155839984.png",alt:"image-20220403155839984"}})]),s._v(" "),a("p",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/AlbertYang0801/pic-bed@main/img/image-20220403155825268.png",alt:"image-20220403155825268"}})])]),s._v(" "),a("li",[a("p",[s._v("使用 "),a("strong",[s._v("jvisualvm")]),s._v(" 来进行分析。")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("堆 dump\n"),a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/AlbertYang0801/pic-bed@main/img/image-20220403163201300.png",alt:"image-20220403163201300"}})])]),s._v(" "),a("li",[a("p",[s._v("查找最大的对象")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/AlbertYang0801/pic-bed@main/img/image-20220403163233852.png",alt:"image-20220403163233852"}})])])])])]),s._v(" "),a("h3",{attrs:{id:"_5、方法区"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5、方法区"}},[s._v("#")]),s._v(" 5、方法区")]),s._v(" "),a("p",[s._v("方法区在 JVM 中也是一个非常重要的区域，"),a("strong",[s._v("是线程共享的内存区域")]),s._v("。")]),s._v(" "),a("h4",{attrs:{id:"组成"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#组成"}},[s._v("#")]),s._v(" 组成")]),s._v(" "),a("p",[s._v("在方法区中，存储了每个类的信息、静态变量、常量以及编译后的代码等。")]),s._v(" "),a("ul",[a("li",[s._v("类（包含类名称、方法信息、字段信息）")]),s._v(" "),a("li",[a("strong",[s._v("运行时常量池")]),s._v("（静态变量、常量）")]),s._v(" "),a("li",[s._v("类的加载（编译后的代码）")])]),s._v(" "),a("p",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/AlbertYang0801/pic-bed@main/img/20220420152154.png",alt:"img"}})]),s._v(" "),a("h4",{attrs:{id:"方法区的实现"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#方法区的实现"}},[s._v("#")]),s._v(" 方法区的实现")]),s._v(" "),a("p",[s._v("方法区是 JVM 中的一种规范定义。")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("在 JDK 1.7 以及之前版本，"),a("strong",[s._v("永久代")]),s._v("是方法区的实现，位于堆内存中。为了区分 Java 堆，它还有一个别名叫 Non - Heap （非堆）。")])]),s._v(" "),a("li",[a("p",[s._v("在 JDK 1.8 方法区的实现是"),a("strong",[s._v("元数据区")]),s._v("，位于本地内存中。")])])]),s._v(" "),a("p",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/AlbertYang0801/pic-bed@main/img/image-20220404110600958.png",alt:"image-20220404110600958"}})]),s._v(" "),a("h4",{attrs:{id:"方法区内存溢出"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#方法区内存溢出"}},[s._v("#")]),s._v(" 方法区内存溢出")]),s._v(" "),a("p",[s._v("当方法区无法满足内存分配时，将抛出 "),a("code",[s._v("OutOfMemoryError")]),s._v(" 异常。")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("元空间内存溢出")]),s._v(" "),a("p",[s._v("创建类对象导致元空间内存溢出。")]),s._v(" "),a("blockquote",[a("p",[s._v("修改元空间内存大小：-XX:MaxMetaspaceSize=8m")])]),s._v(" "),a("p",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/AlbertYang0801/pic-bed@main/img/image-20220404112357586.png",alt:"image-20220404112357586"}})])])]),s._v(" "),a("h4",{attrs:{id:"方法区垃圾回收"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#方法区垃圾回收"}},[s._v("#")]),s._v(" 方法区垃圾回收")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/AlbertYang0801/pic-bed@main/img/20220420151532.png",alt:"img"}})]),s._v(" "),a("h3",{attrs:{id:"_6、运行时常量池"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6、运行时常量池"}},[s._v("#")]),s._v(" 6、运行时常量池")]),s._v(" "),a("p",[s._v("运行时常量池是"),a("strong",[s._v("方法区的一部分")]),s._v("，用于存放编译期生成的常量和对象引用，这部分内容将在被类加载后，进入方法区的运行时常量池中存放。运行时常量池是每个类都有一个，而且具备动态性，运行期间也可以放入新的常量。")]),s._v(" "),a("p",[a("a",{attrs:{href:"https://blog.csdn.net/qq_45737068/article/details/107149922?spm=1001.2101.3001.6661.1&utm_medium=distribute.pc_relevant_t0.none-task-blog-2%7Edefault%7ECTRLIST%7ERate-1.pc_relevant_antiscanv2&depth_1-utm_source=distribute.pc_relevant_t0.none-task-blog-2%7Edefault%7ECTRLIST%7ERate-1.pc_relevant_antiscanv2&utm_relevant_index=1",target:"_blank",rel:"noopener noreferrer"}},[s._v("详解JVM常量池、Class常量池、运行时常量池、字符串常量池"),a("OutboundLink")],1)]),s._v(" "),a("h4",{attrs:{id:"字符串常量池-stringtable"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字符串常量池-stringtable"}},[s._v("#")]),s._v(" 字符串常量池-StringTable")]),s._v(" "),a("p",[s._v("存放的是方法中的字符串常量，作用是"),a("strong",[s._v("减少字符串的重复创建")]),s._v("，字符串常量池是共享区域。")]),s._v(" "),a("p",[a("strong",[s._v("StringTable")]),s._v(" 数据结构本质上类似 哈希表（数组+链表），在 1.6 位于永久代中，之后在堆内存中。")]),s._v(" "),a("p",[s._v("StringTable实现的前提是 String类型不可变的，若String可变，对于不同的引用，指向StringTable的变量值也会随即改变。")]),s._v(" "),a("p",[a("a",{attrs:{href:"https://www.cnblogs.com/baizhanshi/p/6970583.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("为什么String类是不可变的？"),a("OutboundLink")],1)]),s._v(" "),a("blockquote",[a("p",[s._v("StringTable 位于永久代中，而永久代只有在 fullGC的时候才会进行垃圾回收，就是在老年代满的时候进行的垃圾回收。StringTable 数据结构本质上类似 HashMap，数据越多的情况效率越低。所以垃圾回收频率低的话，影响到StringTable 的使用。")])]),s._v(" "),a("p",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/AlbertYang0801/pic-bed@main/img/image-20220404110600958.png",alt:"image-20220404110600958"}})]),s._v(" "),a("p",[a("strong",[s._v("懒加载策略")])]),s._v(" "),a("p",[s._v("方法中的字符串，只有用到了该参数，才会放到字符串常量池中，一种懒加载策略。")]),s._v(" "),a("p",[a("strong",[s._v("OOM异常")])]),s._v(" "),a("ul",[a("li",[a("p",[s._v("JDK1.6之前，StringTable位于老年代中。")]),s._v(" "),a("p",[s._v("当不断向 StringTable 写入数据时，可能造成老年代的 OOM。")])]),s._v(" "),a("li",[a("p",[s._v("JDK1.7之后，StringTable位于堆内存中。")]),s._v(" "),a("p",[s._v("同理，StringTable 可能会造成 OOM。")])])]),s._v(" "),a("p",[a("strong",[s._v("StrintTable垃圾回收")])]),s._v(" "),a("p",[a("a",{attrs:{href:"https://blog.csdn.net/zhuxuemin1991/article/details/103940936?spm=1001.2101.3001.6661.1&utm_medium=distribute.pc_relevant_t0.none-task-blog-2%7Edefault%7ECTRLIST%7ERate-1.pc_relevant_paycolumn_v3&depth_1-utm_source=distribute.pc_relevant_t0.none-task-blog-2%7Edefault%7ECTRLIST%7ERate-1.pc_relevant_paycolumn_v3&utm_relevant_index=1",target:"_blank",rel:"noopener noreferrer"}},[s._v("StringTable垃圾回收跟踪案例"),a("OutboundLink")],1)]),s._v(" "),a("h4",{attrs:{id:"intern-方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#intern-方法"}},[s._v("#")]),s._v(" intern()方法")]),s._v(" "),a("p",[a("code",[s._v("intern()")]),s._v(" 方法作用是将字符串添加到串池中。")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("JDK6")]),s._v(" "),a("p",[s._v("将堆中字符串"),a("strong",[s._v("复制一份")]),s._v("放入串池，若串池存在该字符串，返回串池的引用。若串池不存在，在串池放入复制的字符串的引用。")])]),s._v(" "),a("li",[a("p",[s._v("JDK7")]),s._v(" "),a("p",[s._v("将堆中字符串对象放入串池，若串池存在该字符串，返回串池的引用。若串池不存在，则在串池放入堆中字符串的引用。")])])]),s._v(" "),a("hr"),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "1" 作为常量放入串池')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// new String("1") 在堆中创建对象')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// s是堆中对象的引用 ")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" s "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// 将s引用存入串池，但串池已经有了"1"')]),s._v("\n    s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("intern")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// 从串池中找到 "1"')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" s2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// s为堆中对象的引用，没有改变")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// s2为串池对象的引用")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// false")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" s2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//jdk1.8               ")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "1" 作为常量放入串池')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// new String("1") 在堆中创建两个对象')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// s3 = new StringBuilder().append("1").append("1").toString ==> new String("11")')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// s3是堆中字符串 11 的引用")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" s3 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 将s3的引用存入串池，串池之前不存在11。")]),s._v("\n    s3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("intern")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 从串池找11，就是s3的引用地址。")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" s4 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"11"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//jdk1.8 true")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//jdk1.6 false 因为intern()放到串池的是复制的对象，和堆中对象不是一个")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s3 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" s4"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br")])]),a("p",[a("a",{attrs:{href:"https://tech.meituan.com/2014/03/06/in-depth-understanding-string-intern.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("美团技术团队：深入解析String#intern"),a("OutboundLink")],1)]),s._v(" "),a("h4",{attrs:{id:"stringtable调优"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#stringtable调优"}},[s._v("#")]),s._v(" StringTable调优")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("调整StringTable大小")]),s._v(" "),a("p",[s._v("类比 HashMap，StringTable 的大小就是桶的个数，桶越多，哈希碰撞几率越低。")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 最小值为1009")]),s._v("\n-XX:StringTable"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1009")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("blockquote",[a("p",[s._v("假设写入 StringTable表数据非常多，当 StringTable表的大小越小时，越容易发生哈希碰撞产生链表。而随着数据变多，链表会越来越长。而在写入 StringTable 时，为了保证数据的唯一性，会查找 StringTable 判断数据唯一性。此时链表越长查找效率越低，进而影响了写入的效率。")])]),s._v(" "),a("p",[a("strong",[s._v("若写入串池数据量较大，适当调大该参数")]),s._v("，减少哈希碰撞的几率，用内存空间来换效率。")])]),s._v(" "),a("li",[a("p",[s._v("重复字符串对象放入StringTable")]),s._v(" "),a("p",[s._v("若是重复字符串对象很多，考虑使用 "),a("code",[s._v("intern()")]),s._v(" 方法放入 StringTable 中。")])])]),s._v(" "),a("h3",{attrs:{id:"_7、直接内存"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7、直接内存"}},[s._v("#")]),s._v(" 7、直接内存")]),s._v(" "),a("p",[s._v("直接内存是 JDK 1.8 之后被利用到的区域，并不是虚拟机运行时数据区的一部分，但是这部分内存由于取代了方法区，会被频繁使用也可能导致 "),a("code",[s._v("OutOfMemory")]),s._v(" 异常。")]),s._v(" "),a("ul",[a("li",[s._v("常用于 NIO 操作时，用作数据缓冲区。")]),s._v(" "),a("li",[s._v("分配回收成本较高，但读写性能高。")]),s._v(" "),a("li",[s._v("不受 JVM 内存回收管理。")])]),s._v(" "),a("hr"),s._v(" "),a("p",[a("strong",[s._v("读取文件 -> 系统缓冲区 -> java 缓冲区")])]),s._v(" "),a("p",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/AlbertYang0801/pic-bed@main/img/image-20220406221231734.png",alt:"image-20220406221231734"}})]),s._v(" "),a("p",[a("strong",[s._v("读取文件 -> 直接内存")])]),s._v(" "),a("blockquote",[a("p",[s._v("直接内存是系统内存和 Java 堆内存都可以共享的一个区域，对比之前读取文件时，减少了一次缓冲区的写入和读取，进而提高了效率。")])]),s._v(" "),a("p",[a("img",{attrs:{src:"C:%5CUsers%5Cyjw%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20220406221203228.png",alt:"image-20220406221203228"}})]),s._v(" "),a("h4",{attrs:{id:"直接内存oom"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#直接内存oom"}},[s._v("#")]),s._v(" 直接内存OOM")]),s._v(" "),a("p",[s._v("不断使用直接内存会使用直接内存 OOM。")]),s._v(" "),a("div",{staticClass:"language-JAVA line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("DirectBufferOOM")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" size "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1024")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1024")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("List")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ByteBuffer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" list "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ArrayList")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("try")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//直接内存使用大小")]),s._v("\n                "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ByteBuffer")]),s._v(" byteBuffer "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ByteBuffer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("allocateDirect")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("size"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n                list"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("byteBuffer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n                i"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("finally")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br")])]),a("p",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/AlbertYang0801/pic-bed@main/img/image-20220406224707670.png",alt:"image-20220406224707670"}})]),s._v(" "),a("h4",{attrs:{id:"直接内存释放"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#直接内存释放"}},[s._v("#")]),s._v(" 直接内存释放")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/AlbertYang0801/pic-bed@main/img/image-20220406230154928.png",alt:"image-20220406230154928"}})]),s._v(" "),a("h2",{attrs:{id:"常见问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常见问题"}},[s._v("#")]),s._v(" 常见问题")]),s._v(" "),a("h3",{attrs:{id:"_1-jdk-1-7-和-jdk-1-8-内存模型发生的变化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-jdk-1-7-和-jdk-1-8-内存模型发生的变化"}},[s._v("#")]),s._v(" 1. JDK 1.7 和 JDK 1.8 内存模型发生的变化？")]),s._v(" "),a("p",[s._v("最大的变化就是在 JDK 1.8 中 元数据区取代了永久代。永久代位于虚拟机运行时数据区，而元数据区位于本地内存中。")]),s._v(" "),a("h3",{attrs:{id:"_2-方法区和永久代的区分"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-方法区和永久代的区分"}},[s._v("#")]),s._v(" 2. 方法区和永久代的区分？")]),s._v(" "),a("p",[s._v("方法区是 JVM 中的一种规范定义，永久代是其具体的实现，在 JDK 1.8 中 元空间也是方法区的一种实现。")]),s._v(" "),a("h3",{attrs:{id:"_3-为什么取消永久代"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-为什么取消永久代"}},[s._v("#")]),s._v(" 3. 为什么取消永久代？")]),s._v(" "),a("ul",[a("li",[s._v("根据官方文档的解释，是为了融合 "),a("code",[s._v("HotSpot JVM")]),s._v(" 和 "),a("code",[s._v("JRockit VM")]),s._v(" 做出的努力，因为 "),a("code",[s._v("JRockit VM")]),s._v(" 没有永久代，不需要配置。")]),s._v(" "),a("li",[s._v("永久代大小指定比较困难，因为存放类和方法信息大小不易确定，并且永久代使用比较频繁，容易发生内存不够用的情况，即容易内存溢出。")]),s._v(" "),a("li",[s._v("永久代容易发生内存泄漏，永久代中的一些类不使用时，也不容易被 GC 回收，容易造成内存泄漏问题。")])]),s._v(" "),a("h3",{attrs:{id:"_4-什么是内存溢出和内存泄漏"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-什么是内存溢出和内存泄漏"}},[s._v("#")]),s._v(" 4. 什么是内存溢出和内存泄漏？")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("内存溢出")]),s._v(" "),a("p",[s._v("当创建新对象的时候无法申请到足够的内存时，就会发生内存溢出。")])]),s._v(" "),a("li",[a("p",[s._v("内存泄露")]),s._v(" "),a("p",[s._v("对象位于内存中不被使用，但是无法被 GC 回收掉，始终堆积在内存中。当堆积到一定程度会发生内存溢出。")])])]),s._v(" "),a("h2",{attrs:{id:"参考链接"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考链接"}},[s._v("#")]),s._v(" 参考链接")]),s._v(" "),a("p",[a("a",{attrs:{href:"https://juejin.cn/post/6844903909983535111#heading-8",target:"_blank",rel:"noopener noreferrer"}},[s._v("Java内存管理-JVM内存模型以及JDK7和JDK8内存模型对比总结（三）"),a("OutboundLink")],1)])])}),[],!1,null,null,null);t.default=e.exports}}]);