(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{397:function(t,l,e){"use strict";e.r(l);var s=e(40),n=Object(s.a)({},(function(){var t=this,l=t.$createElement,e=t._self._c||l;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h3",{attrs:{id:"线程池的调度过程"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#线程池的调度过程"}},[t._v("#")]),t._v(" 线程池的调度过程")]),t._v(" "),e("ol",[e("li",[t._v("根据初始化参数创建线程池，刚创建时，线程池内没有线程。")]),t._v(" "),e("li",[t._v("当有新的任务进到线程池的时候，会立即新增线程执行任务。")]),t._v(" "),e("li",[t._v("若线程数等于核心线程数时，这时进来的任务会被添加到任务队列中，而线程会从任务队列中获取任务执行。")]),t._v(" "),e("li",[t._v("线程数等于核心线程数且任务队列已满，这时候会在线程池中创建新线程来执行任务。")]),t._v(" "),e("li",[t._v("若线程数等于最大线程数，且任务队列已满，此时会执行线程池对应的拒绝策略。")]),t._v(" "),e("li",[t._v("当任务队列中没有任务，且线程等待时间超过空闲时间，则该线程会被回收。最终线程池中的线程数量会保持在核心线程数的大小。")])])])}),[],!1,null,null,null);l.default=n.exports}}]);