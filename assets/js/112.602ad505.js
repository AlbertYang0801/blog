(window.webpackJsonp=window.webpackJsonp||[]).push([[112],{425:function(t,a,s){"use strict";s.r(a);var r=s(18),n=Object(r.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"seata分布式事务"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#seata分布式事务"}},[t._v("#")]),t._v(" Seata分布式事务")]),t._v(" "),a("p",[t._v("在分布式情况下，一次业务请求需要调用多个系统操作多个数据源时，针对多个数据源操作会产生分布式事务问题。每个系统能够保证各自数据源的一致性问题，但是全部系统数据的一致性问题没法保证。")]),t._v(" "),a("h3",{attrs:{id:"官网地址"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#官网地址"}},[t._v("#")]),t._v(" 官网地址")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://seata.io/zh-cn/docs/user/quickstart.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://seata.io/zh-cn/docs/user/quickstart.html"),a("OutboundLink")],1)]),t._v(" "),a("h3",{attrs:{id:"下载地址"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#下载地址"}},[t._v("#")]),t._v(" 下载地址")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://seata.io/zh-cn/blog/download.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://seata.io/zh-cn/blog/download.html"),a("OutboundLink")],1)]),t._v(" "),a("h3",{attrs:{id:"基础概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基础概念"}},[t._v("#")]),t._v(" 基础概念")]),t._v(" "),a("p",[t._v("事务ID + 三组件")]),t._v(" "),a("p",[a("strong",[t._v("事务ID")])]),t._v(" "),a("ul",[a("li",[t._v("Transaction ID(XID)")])]),t._v(" "),a("p",[a("strong",[t._v("三组件")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("TC-事务协调者")]),t._v(" "),a("p",[t._v("维护全局和分支事务的状态，"),a("strong",[t._v("驱动全局事务提交或回滚")]),t._v("。")]),t._v(" "),a("p",[a("strong",[t._v("为单独部署的服务端。")])])]),t._v(" "),a("li",[a("p",[t._v("TM-事务管理器")]),t._v(" "),a("p",[t._v("定义全局事务的范围，开启全局事务，提交或回滚全局事务。")]),t._v(" "),a("p",[a("strong",[t._v("嵌入到应用中的 Clinet 客户端")]),t._v("。在代码中加注解的地方对应的就是事务管理器 TM。")])]),t._v(" "),a("li",[a("p",[t._v("RM")]),t._v(" "),a("p",[t._v("对应的资源管理器，管理分支事务处理的资源。与 TC 交谈以注册分支事务和报告分支事务的状态，"),a("strong",[t._v("驱动分支事务的提交或者回滚")]),t._v("。")])])]),t._v(" "),a("h3",{attrs:{id:"处理过程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#处理过程"}},[t._v("#")]),t._v(" 处理过程")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://s2.loli.net/2025/06/10/3foHNOjRdbeqa4g.png",alt:""}})]),t._v(" "),a("p",[a("img",{attrs:{src:"https://s2.loli.net/2025/06/10/wW1LMaeKdUqDjng.png",alt:""}})]),t._v(" "),a("p",[a("strong",[t._v("TM-事务管理器")])]),t._v(" "),a("p",[t._v("在需要开启全局事务的地方，加注解。")]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@GlobalTransactional")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"fsp-create-order"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("rollbackFor "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Exception")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("h3",{attrs:{id:"分布式事务的执行流程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分布式事务的执行流程"}},[t._v("#")]),t._v(" 分布式事务的执行流程")]),t._v(" "),a("ol",[a("li",[t._v("TM 开启分布式事务，TM 会向 TC（seata服务器） 注册全局事务记录。")]),t._v(" "),a("li",[t._v("RM 向 TC 汇报事务执行情况。")]),t._v(" "),a("li",[t._v("TM 结束分布式事务，事务一阶段结束。TM 会通知 TC 提交、回滚分布式事务。")]),t._v(" "),a("li",[t._v("TC 汇总各个系统的事务信息，决定分布式事务是整体提交还是整体回滚。")]),t._v(" "),a("li",[t._v("TC 通知所有 RM 提交/回滚资源，事务二阶段结束。")])]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"seata的四大模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#seata的四大模式"}},[t._v("#")]),t._v(" Seata的四大模式")]),t._v(" "),a("ul",[a("li",[t._v("XA模式:强一致性分阶段事务模式，牺牲了一定的可用性，无业务侵入")]),t._v(" "),a("li",[t._v("TCC模式:最终一致的分阶段事务模式，有业务侵入")]),t._v(" "),a("li",[t._v("AT模式:最终一致的分阶段事务模式，无业务侵入，也是"),a("strong",[t._v("Seata的默认模式")]),t._v("。")]),t._v(" "),a("li",[t._v("SAGA模式:长事务模式，有业务侵入")])]),t._v(" "),a("h3",{attrs:{id:"xa模式的2pc"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#xa模式的2pc"}},[t._v("#")]),t._v(" XA模式的2PC")]),t._v(" "),a("ul",[a("li",[t._v("一阶段执行本地事务，但是不提交，锁定资源。")]),t._v(" "),a("li",[t._v("二阶段根据一阶段本地事务执行结果，commit或者rollback。")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://s2.loli.net/2025/06/10/JC9zBcZptiHoGxh.png",alt:""}})]),t._v(" "),a("p",[a("img",{attrs:{src:"https://s2.loli.net/2025/06/10/NcL8vPVxdZmSeG7.png",alt:""}})]),t._v(" "),a("p",[a("img",{attrs:{src:"https://s2.loli.net/2025/06/10/IGftLvKFZVUoukx.png",alt:""}})]),t._v(" "),a("h3",{attrs:{id:"实现"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实现"}},[t._v("#")]),t._v(" 实现")]),t._v(" "),a("p",[t._v("依赖于数据库的事务来实现。")]),t._v(" "),a("h3",{attrs:{id:"缺点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#缺点"}},[t._v("#")]),t._v(" 缺点")]),t._v(" "),a("p",[t._v("因为一阶段需要锁定数据库资源，要等到二阶段结束才能释放，容易造成资源的浪费，性能较差，需要依赖关系型数据库实现事务。")]),t._v(" "),a("h3",{attrs:{id:"at模式的2pc"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#at模式的2pc"}},[t._v("#")]),t._v(" AT模式的2PC")]),t._v(" "),a("p",[t._v("和XA类似都是二阶段提交，但是AT模式一阶段直接提交本地事务。不锁定资源，解决了XA模式锁定资源的问题。")]),t._v(" "),a("p",[t._v("二阶段采用反向补偿机制回滚事务。")]),t._v(" "),a("p",[t._v("Seata默认的分布式事务模式时AT。")]),t._v(" "),a("h3",{attrs:{id:"一阶段"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一阶段"}},[t._v("#")]),t._v(" 一阶段")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://s2.loli.net/2025/06/10/4wGr78O2TjkMuoz.png",alt:""}})]),t._v(" "),a("ol",[a("li",[a("p",[a("strong",[t._v("TC")])]),t._v(" "),a("p",[t._v("seata 作为 TC (事务协调者)，记录了 TM 开启分布式事务时，生成的全局事务ID - XID。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://s2.loli.net/2025/06/10/aDl8Fb9WcEp4O2Y.png",alt:""}})])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("RM")])])])]),t._v(" "),a("p",[t._v("每个分支的资源管理器对应数据库, 在 undo_log 中记录了对应分支的本地事务的信息。")]),t._v(" "),a("p",[t._v("包含全局事务ID - XID、分支ID、rollback_info。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://s2.loli.net/2025/06/10/GojgFOedq7AV9Qs.png",alt:""}})]),t._v(" "),a("p",[t._v("其中 "),a("strong",[t._v("rollback_info")]),t._v(" 中包含了一阶段事务中, 对应更新数据的 "),a("strong",[t._v("before_image")]),t._v(" 和 "),a("strong",[t._v("after_image")]),t._v(" 信息。")]),t._v(" "),a("blockquote",[a("p",[t._v("数据的 before_image 和 after_image 作用于二阶段的事务回滚。")])]),t._v(" "),a("h3",{attrs:{id:"二阶段"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二阶段"}},[t._v("#")]),t._v(" 二阶段")]),t._v(" "),a("p",[t._v("在一阶段中，每个分支的事务执行完毕，并向 TC 上报事务的执行结果。由 TC 根据结果决定全体提交还是全体回滚。")]),t._v(" "),a("ul",[a("li",[a("p",[a("strong",[t._v("全体提交")])]),t._v(" "),a("p",[t._v("在全体提交时，由于一阶段各个分支已经完成事务的提交，所以全体提交时只需要将一阶段保存的快照数据和行锁删除，完成数据清理就算全体事务提交成功。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://s2.loli.net/2025/06/10/cVg2zX63qIC41OJ.png",alt:""}})])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("全体回滚")])]),t._v(" "),a("p",[t._v("由于一阶段事务未全体执行成功，导致二阶段进行回滚。")]),t._v(" "),a("p",[t._v("各个分支回滚的方式是通过一阶段记录的 "),a("code",[t._v("undo_log")]),t._v(" 中记录的 "),a("code",[t._v("rollback_info")]),t._v(" 数据进行回滚。")]),t._v(" "),a("p",[t._v("其中包含了 "),a("strong",[t._v("before_image")]),t._v(" （更新前数据）和 "),a("strong",[t._v("after_image")]),t._v("（更新后数据）,其中用更新后数据来和数据库数据作校验，若一致说明数据正常，可以还原到更新前数据。")]),t._v(" "),a("p",[t._v("（类似于乐观锁）若数据库数据和 "),a("strong",[t._v("after_image")]),t._v("（更新后数据），说明出现了脏数据（人工干预处理）。")]),t._v(" "),a("blockquote",[a("p",[t._v("疑问：在操作数据的时候，是加了行锁的，所以不应该出现脏数据的问题。")])]),t._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("update")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("table")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("data")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" before_image "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("data")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" after_image\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("注意更新的方式使用的是 "),a("strong",[t._v("反向补偿")]),t._v("。不同于传统的 redo_log （重做日志刷新到磁盘）方式，反向补偿是通过一条 update 语句来实现数据的回滚的（确定回滚语句的主键，根据一阶段记录的 before_image 数据进行更新实现回滚）。")]),t._v(" "),a("p",[t._v("最终删除掉一阶段保存的快照信息和行锁即可。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://s2.loli.net/2025/06/10/s8kh59LE6BRGrVp.png",alt:""}})])])]),t._v(" "),a("h3",{attrs:{id:"使用流程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用流程"}},[t._v("#")]),t._v(" 使用流程")]),t._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" Seata控制分布式事务\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("）、每一个微服务先必须创建undo_log"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("）、安装事务协调器；seata"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("server: https:"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//github.com/seata/seata/releases")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("）、整合\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("      "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("、导入依赖  spring"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("cloud"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("starter"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("alibaba"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("seata  seata"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("all")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.0")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v(".0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("jar\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("      "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("、解压并启动seata"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("server\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("          registry"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("conf注册中心相关的配置，修改registry "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("nacos\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("          "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("file")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("conf\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("      "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("、所有想要用到分布式事务的微服务使用seata DatasourceProxy代理自己的数据源\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("      "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("、每个微服务，都必须导入registry"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cof\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("file")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("conf  vgroup_mapping"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("{application"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name}"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("fescar"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("service"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("group")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"default"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("      "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("、启动测试\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("      "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),t._v("、给分布式大事务的路口标注"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@GlobalTransactional")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("      "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),t._v("、每一个远程的小事务用 "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@Transactional")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br")])]),a("h3",{attrs:{id:"at和xa的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#at和xa的区别"}},[t._v("#")]),t._v(" AT和XA的区别")]),t._v(" "),a("ol",[a("li",[t._v("一阶段事务提交\n"),a("ul",[a("li",[t._v("AT模式一阶段直接提交事务，二阶段回滚依赖于反向补偿。")]),t._v(" "),a("li",[t._v("XA模式一阶段不提交事务，锁定资源。二阶段按事务提交状况 commit 或 rollback。")])])]),t._v(" "),a("li")]),t._v(" "),a("h3",{attrs:{id:"at和tcc的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#at和tcc的区别"}},[t._v("#")]),t._v(" AT和TCC的区别")]),t._v(" "),a("p",[t._v("AT 模式基于 支持本地 ACID 事务 的 关系型数据库：")]),t._v(" "),a("ul",[a("li",[t._v("一阶段 prepare 行为：在本地事务中，一并提交业务数据更新和相应回滚日志记录。")]),t._v(" "),a("li",[t._v("二阶段 commit 行为：马上成功结束，自动 异步批量清理回滚日志。")]),t._v(" "),a("li",[t._v("二阶段 rollback 行为：通过回滚日志，自动 生成补偿操作，完成数据回滚。")])]),t._v(" "),a("p",[t._v("依赖数据库实现提交和回滚。")]),t._v(" "),a("hr"),t._v(" "),a("p",[t._v("相应的，TCC 模式，不依赖于底层数据资源的事务支持：")]),t._v(" "),a("ul",[a("li",[t._v("一阶段 prepare 行为：调用 自定义 的 prepare 逻辑。")]),t._v(" "),a("li",[t._v("二阶段 commit 行为：调用 自定义 的 commit 逻辑。")]),t._v(" "),a("li",[t._v("二阶段 rollback 行为：调用 自定义 的 rollback 逻辑。")])]),t._v(" "),a("p",[t._v("所谓 TCC 模式，是指支持把 自定义 的分支事务纳入到全局事务的管理中。")]),t._v(" "),a("p",[t._v("业务层面实现提交和回滚逻辑。")]),t._v(" "),a("h2",{attrs:{id:"tcc模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tcc模式"}},[t._v("#")]),t._v(" TCC模式")]),t._v(" "),a("p",[t._v("Tcc 是分布式事务中二阶段提交协议的实现，它的全称为 "),a("code",[t._v("Tny-Confirm-Cancel")]),t._v(" , 即资源预留(Try)、确认操作(Confirm)、取消操作(Cancel)。具体含义如下：")]),t._v(" "),a("ul",[a("li",[t._v("Try(prepare)阶段：对业务资源的检查并预留。")]),t._v(" "),a("li",[t._v("Confirm(commit)阶段：对业务处理进行提交，该步骤会对 Try 预留的资源进行释放，只要 Try 成功，Confirm 一定要能成功.")]),t._v(" "),a("li",[t._v("Cancel(rollback)阶段：对业务处理进行取消，即回滚操作。")])]),t._v(" "),a("h3",{attrs:{id:"tcc如何控制异常"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tcc如何控制异常"}},[t._v("#")]),t._v(" TCC如何控制异常")]),t._v(" "),a("h3",{attrs:{id:"空回滚"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#空回滚"}},[t._v("#")]),t._v(" 空回滚")]),t._v(" "),a("p",[t._v("在没有调用参与方的 try 方法情况下，二阶段调用参与方的 Cancel 方法。")]),t._v(" "),a("blockquote",[a("p",[t._v("在开启全局事务后，执行参与方的的 try 方法发生异常，导致一阶段未完成。在二阶段的时候全局事务失败调用 Cancel 方法，导致空回滚发生。")])]),t._v(" "),a("p",[a("strong",[t._v("解决办法")])]),t._v(" "),a("p",[t._v("Seata 增加了一个 TCC 事务记录表。")]),t._v(" "),a("p",[t._v("在 try 执行时插入一条记录，代表一阶段执行了。在二阶段的时候查询记录即可判断 try 方法是否执行过。")]),t._v(" "),a("h3",{attrs:{id:"幂等性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#幂等性"}},[t._v("#")]),t._v(" 幂等性")]),t._v(" "),a("p",[t._v("二阶段的 commit 和 Cancel 需要保证幂等性。")]),t._v(" "),a("p",[t._v("比如在二阶段时，参与者 A 执行完，将结果发给 TC的时候，如果出现网络抖动等异常导致 TC 未接收到 A 的二阶段返回结果。TC 会发起重复调用，直到执行成功。")]),t._v(" "),a("p",[a("strong",[t._v("解决办法")])]),t._v(" "),a("p",[t._v("在 TCC 事务记录表增加一个字段 status，这样在二阶段执行之后修改状态，后续根据状态判断即可解决幂等性问题。")]),t._v(" "),a("ul",[a("li",[t._v("tried：1")]),t._v(" "),a("li",[t._v("committed：2")]),t._v(" "),a("li",[t._v("rollbacked：3")])]),t._v(" "),a("h3",{attrs:{id:"悬挂"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#悬挂"}},[t._v("#")]),t._v(" 悬挂")]),t._v(" "),a("p",[t._v("悬挂指的是二阶段 Cannel 执行要比 一阶段 try 执行结束的早，全局事务结束。导致 try 方法预留的资源无法释放或提交。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://s2.loli.net/2025/06/10/uh7CD8wqRvN6b2P.png",alt:""}})]),t._v(" "),a("p",[a("img",{attrs:{src:"https://s2.loli.net/2025/06/10/2Z6OlITyciLeqdu.png",alt:""}})]),t._v(" "),a("h3",{attrs:{id:"seata-怎么解决tcc模式的问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#seata-怎么解决tcc模式的问题"}},[t._v("#")]),t._v(" Seata 怎么解决TCC模式的问题")]),t._v(" "),a("h3",{attrs:{id:"tcc-幂等、悬挂和空回滚问题如何解决"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tcc-幂等、悬挂和空回滚问题如何解决"}},[t._v("#")]),t._v(" TCC 幂等、悬挂和空回滚问题如何解决？")]),t._v(" "),a("p",[t._v("TCC 模式中存在的三大问题是"),a("code",[t._v("幂等")]),t._v("、"),a("code",[t._v("悬挂")]),t._v("、"),a("code",[t._v("空回滚")]),t._v("。")]),t._v(" "),a("p",[t._v("在 Seata1.5.1 版本中，增加了一张事务控制表，表名是 "),a("code",[t._v("tcc_fence_log")]),t._v(" 来解决这个问题。")]),t._v(" "),a("p",[t._v("而在 "),a("code",[t._v("@TwoPhaseBusinessAction")]),t._v(" 注解中提到的属性 useTCCFence 就是来指定是否开启这个机制，这个属性值默认是 false。")]),t._v(" "),a("p",[t._v("/zz引入 status = suspended，意为二阶段 cancel已经执行过，阻止一阶段的 try 方法执行。")]),t._v(" "),a("div",{staticClass:"language-go line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[t._v("CREATE TABLE IF NOT EXISTS "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("`tcc_fence_log`")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("`xid`")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("VARCHAR")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("128")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" NOT NULL COMMENT "),a("span",{pre:!0,attrs:{class:"token char"}},[t._v("'global id'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("`branch_id`")]),t._v(" BIGINT NOT NULL COMMENT "),a("span",{pre:!0,attrs:{class:"token char"}},[t._v("'branch id'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("`action_name`")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("VARCHAR")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("64")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" NOT NULL COMMENT 'action name'"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("`status`")]),t._v(" TINYINT NOT NULL COMMENT '"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("status")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tried"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("committed"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("rollbacke\nd"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("suspended"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("'"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("`gmt_create`")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("DATETIME")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" NOT NULL COMMENT 'create time'"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("`gmt_modified`")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("DATETIME")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" NOT NULL COMMENT 'update time'"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n   PRIMARY KEY "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("`xid`")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("`branch_id`")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n   KEY "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("`idx_gmt_modified`")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("`gmt_modified`")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n   KEY "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("`idx_status`")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("`status`")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" ENGINE "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" InnoDB\nDEFAULT CHARSET "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" utf8mb4"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br")])]),a("h3",{attrs:{id:"缺点-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#缺点-2"}},[t._v("#")]),t._v(" 缺点")]),t._v(" "),a("ol",[a("li",[t._v("如果参与者包含第三方公司接口，则无法控制事务补偿、重试、幂等等机制。")]),t._v(" "),a("li",[t._v("存在幂等、空回滚、悬挂等问题。")])]),t._v(" "),a("h2",{attrs:{id:"saga模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#saga模式"}},[t._v("#")]),t._v(" Saga模式")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://seata.apache.org/zh-cn/docs/user/mode/saga",target:"_blank",rel:"noopener noreferrer"}},[t._v("seata.apache.org"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("Saga 模式是 SEATA 提供的长事务解决方案，在 Saga 模式中，业务流程中每个参与者都提交本地事务，当出现某一个参与者失败则补偿前面已经成功的参与者，一阶段正向服务和二阶段补偿服务都由业务开发实现。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://s2.loli.net/2025/06/10/eON69fDJndrUWkR.png",alt:""}})]),t._v(" "),a("ol",[a("li",[t._v("一阶段提交本地事务。")]),t._v(" "),a("li",[t._v("二阶段commit或者rollback。\n"),a("ul",[a("li",[a("p",[t._v("全部执行成功，则commit。")])]),t._v(" "),a("li",[a("p",[t._v("如果当前事务执行失败，回滚当前事务包括之前已经成功的参与者。")]),t._v(" "),a("p",[t._v("通过反向补偿的逻辑（业务实现）来回滚事务。")])])])])]),t._v(" "),a("h3",{attrs:{id:"适用场景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#适用场景"}},[t._v("#")]),t._v(" 适用场景")]),t._v(" "),a("ul",[a("li",[t._v("业务流程长、业务流程多")]),t._v(" "),a("li",[t._v("参与者包含其它公司或遗留系统服务，无法提供 TCC 模式要求的三个接口。")]),t._v(" "),a("li",[t._v("默认情况下很少使用，如果有跨公司的情况，为了保证强一致性可以使用Saga模式。")])])])}),[],!1,null,null,null);a.default=n.exports}}]);