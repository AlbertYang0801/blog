(window.webpackJsonp=window.webpackJsonp||[]).push([[45],{404:function(t,e,r){"use strict";r.r(e);var a=r(26),n=Object(a.a)({},(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"二叉树"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#二叉树"}},[t._v("#")]),t._v(" 二叉树")]),t._v(" "),r("p",[t._v("推荐一个练习数据结构的网站："),r("a",{attrs:{href:"https://www.cs.usfca.edu/~galles/visualization/Algorithms.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://www.cs.usfca.edu/~galles/visualization/Algorithms.html"),r("OutboundLink")],1)]),t._v(" "),r("h2",{attrs:{id:"二叉树的遍历-重要"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#二叉树的遍历-重要"}},[t._v("#")]),t._v(" 二叉树的遍历（重要）")]),t._v(" "),r("p",[t._v("以图示二叉树为例。")]),t._v(" "),r("p",[r("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/AlbertYang0801/pic-bed@main/img/20210412170440.png",alt:""}})]),t._v(" "),r("h3",{attrs:{id:"中序遍历"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#中序遍历"}},[t._v("#")]),t._v(" "),r("a",{attrs:{href:"https://baike.baidu.com/item/%E4%B8%AD%E5%BA%8F%E9%81%8D%E5%8E%86",target:"_blank",rel:"noopener noreferrer"}},[t._v("中序遍历"),r("OutboundLink")],1)]),t._v(" "),r("p",[t._v("中序遍历（LDR）是"),r("a",{attrs:{href:"https://baike.baidu.com/item/%E4%BA%8C%E5%8F%89%E6%A0%91%E9%81%8D%E5%8E%86/9796049",target:"_blank",rel:"noopener noreferrer"}},[t._v("二叉树遍历"),r("OutboundLink")],1),t._v("的一种，也叫做"),r("a",{attrs:{href:"https://baike.baidu.com/item/%E4%B8%AD%E6%A0%B9%E9%81%8D%E5%8E%86/1703566",target:"_blank",rel:"noopener noreferrer"}},[t._v("中根遍历"),r("OutboundLink")],1),t._v("、中序周游。在二叉树中，中序遍历首先遍历左子树，然后访问根结点，最后遍历右子树。")]),t._v(" "),r("p",[t._v("图示二叉树中序遍历结果为："),r("code",[t._v("3、5、6、10、14、15、17、20")]),t._v("；")]),t._v(" "),r("p",[t._v("参考代码："),r("a",{attrs:{href:"https://gitee.com/zztiyjw/java-component-practice/blob/d7ac789c29eb75f59b5f8e323c2bac8670a50d6b/leetcode-practice/src/main/java/com/albert/leetcode/tree/MiddleTraverse.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("Java实现中序遍历"),r("OutboundLink")],1)]),t._v(" "),r("h3",{attrs:{id:"前序遍历"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#前序遍历"}},[t._v("#")]),t._v(" "),r("a",{attrs:{href:"https://baike.baidu.com/item/%E5%89%8D%E5%BA%8F%E9%81%8D%E5%8E%86",target:"_blank",rel:"noopener noreferrer"}},[t._v("前序遍历"),r("OutboundLink")],1)]),t._v(" "),r("p",[t._v("前序遍历（VLR）， [1] 是"),r("a",{attrs:{href:"https://baike.baidu.com/item/%E4%BA%8C%E5%8F%89%E6%A0%91%E9%81%8D%E5%8E%86/9796049",target:"_blank",rel:"noopener noreferrer"}},[t._v("二叉树遍历"),r("OutboundLink")],1),t._v("的一种，也叫做"),r("a",{attrs:{href:"https://baike.baidu.com/item/%E5%85%88%E6%A0%B9%E9%81%8D%E5%8E%86/1315509",target:"_blank",rel:"noopener noreferrer"}},[t._v("先根遍历"),r("OutboundLink")],1),t._v("、先序遍历、前序周游，可记做根左右。前序遍历首先访问"),r("a",{attrs:{href:"https://baike.baidu.com/item/%E6%A0%B9%E7%BB%93%E7%82%B9/9795570",target:"_blank",rel:"noopener noreferrer"}},[t._v("根结点"),r("OutboundLink")],1),t._v("然后"),r("a",{attrs:{href:"https://baike.baidu.com/item/%E9%81%8D%E5%8E%86/9796023",target:"_blank",rel:"noopener noreferrer"}},[t._v("遍历"),r("OutboundLink")],1),t._v("左子树，最后遍历右子树。")]),t._v(" "),r("p",[t._v("根节点 -> 左子树 -> 右子树")]),t._v(" "),r("p",[t._v("图示二叉树前序遍历结果为："),r("code",[t._v("10、5、3、6、15、14、20、17")]),t._v("；")]),t._v(" "),r("h3",{attrs:{id:"后序遍历"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#后序遍历"}},[t._v("#")]),t._v(" 后序遍历")]),t._v(" "),r("p",[t._v("后序遍历（LRD）是"),r("a",{attrs:{href:"https://baike.baidu.com/item/%E4%BA%8C%E5%8F%89%E6%A0%91%E9%81%8D%E5%8E%86/9796049",target:"_blank",rel:"noopener noreferrer"}},[t._v("二叉树遍历"),r("OutboundLink")],1),t._v("的一种，也叫做"),r("a",{attrs:{href:"https://baike.baidu.com/item/%E5%90%8E%E6%A0%B9%E9%81%8D%E5%8E%86/8545391",target:"_blank",rel:"noopener noreferrer"}},[t._v("后根遍历"),r("OutboundLink")],1),t._v("、后序周游，可记做左右根。后序遍历有"),r("a",{attrs:{href:"https://baike.baidu.com/item/%E9%80%92%E5%BD%92%E7%AE%97%E6%B3%95/4323575",target:"_blank",rel:"noopener noreferrer"}},[t._v("递归算法"),r("OutboundLink")],1),t._v("和非递归算法两种。在二叉树中，先左后右再根，即首先遍历左子树，然后遍历右子树，最后访问根结点。")]),t._v(" "),r("p",[t._v("左子树 -> 右子树 -> 根节点")]),t._v(" "),r("p",[t._v("图示二叉树后序遍历结果为："),r("code",[t._v("3、5、6、14、17、20、15、10")]),t._v("；")]),t._v(" "),r("h3",{attrs:{id:"层序遍历"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#层序遍历"}},[t._v("#")]),t._v(" "),r("a",{attrs:{href:"https://baike.baidu.com/item/%E9%80%90%E5%B1%82%E9%81%8D%E5%8E%86",target:"_blank",rel:"noopener noreferrer"}},[t._v("层序遍历"),r("OutboundLink")],1)]),t._v(" "),r("p",[t._v("二叉树的层次遍历 ，顾名思义就是指从二叉树的第一层（根节点）开始，从上至下逐层遍历，在同一层中，则按照从左到右的顺序对节点逐个访问。在逐层遍历过程中，按从顶层到底层的次序访问树中元素，在同一层中，从左到右进行访问。")]),t._v(" "),r("p",[t._v("图示二叉树层序遍历结果为："),r("code",[t._v("10、5、15、3、6、14、20、17")]),t._v("；")]),t._v(" "),r("hr"),t._v(" "),r("h2",{attrs:{id:"满二叉树"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#满二叉树"}},[t._v("#")]),t._v(" "),r("a",{attrs:{href:"https://baike.baidu.com/item/%E6%BB%A1%E4%BA%8C%E5%8F%89%E6%A0%91/7773283",target:"_blank",rel:"noopener noreferrer"}},[t._v("满二叉树"),r("OutboundLink")],1)]),t._v(" "),r("p",[t._v("除最后一层无任何子"),r("a",{attrs:{href:"https://baike.baidu.com/item/%E8%8A%82%E7%82%B9/865052",target:"_blank",rel:"noopener noreferrer"}},[t._v("节点"),r("OutboundLink")],1),t._v("外，每一层上的所有结点都有两个子结点的二叉树。")]),t._v(" "),r("p",[r("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/AlbertYang0801/pic-bed@main/img/20210412163642.png",alt:""}})]),t._v(" "),r("h2",{attrs:{id:"完全二叉树"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#完全二叉树"}},[t._v("#")]),t._v(" "),r("a",{attrs:{href:"https://baike.baidu.com/item/%E5%AE%8C%E5%85%A8%E4%BA%8C%E5%8F%89%E6%A0%91/7773232?fr=aladdin",target:"_blank",rel:"noopener noreferrer"}},[t._v("完全二叉树"),r("OutboundLink")],1)]),t._v(" "),r("p",[t._v("一棵深度为k的有n个结点的"),r("a",{attrs:{href:"https://baike.baidu.com/item/%E4%BA%8C%E5%8F%89%E6%A0%91/1602879",target:"_blank",rel:"noopener noreferrer"}},[t._v("二叉树"),r("OutboundLink")],1),t._v("，对树中的结点按从上至下、从左到右的顺序进行编号，如果编号为i（1≤i≤n）的结点与"),r("a",{attrs:{href:"https://baike.baidu.com/item/%E6%BB%A1%E4%BA%8C%E5%8F%89%E6%A0%91/7773283",target:"_blank",rel:"noopener noreferrer"}},[t._v("满二叉树"),r("OutboundLink")],1),t._v("中编号为i的结点在二叉树中的位置相同，则这棵二叉树称为完全二叉树")]),t._v(" "),r("p",[r("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/AlbertYang0801/pic-bed@main/img/20210412163719.png",alt:""}})]),t._v(" "),r("h2",{attrs:{id:"二叉查找树-重要"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#二叉查找树-重要"}},[t._v("#")]),t._v(" "),r("a",{attrs:{href:"https://baike.baidu.com/item/%E4%BA%8C%E5%8F%89%E6%8E%92%E5%BA%8F%E6%A0%91/10905079?fromtitle=%E4%BA%8C%E5%8F%89%E6%9F%A5%E6%89%BE%E6%A0%91&fromid=7077965&fr=aladdin",target:"_blank",rel:"noopener noreferrer"}},[t._v("二叉查找树（重要）"),r("OutboundLink")],1)]),t._v(" "),r("p",[r("strong",[t._v("特点")])]),t._v(" "),r("ul",[r("li",[t._v("任何节点的左节点都小于该节点。")]),t._v(" "),r("li",[t._v("任何节点的右节点都大于该节点。")]),t._v(" "),r("li",[t._v("查找速率高于链表。")])]),t._v(" "),r("p",[r("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/AlbertYang0801/pic-bed@main/img/20210412163924.png",alt:""}})]),t._v(" "),r("p",[r("strong",[t._v("缺点")])]),t._v(" "),r("p",[t._v("二叉查找树在特定情况下会退化成链表，若插入的元素是连续的，则会形成一个链表。")]),t._v(" "),r("p",[r("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/AlbertYang0801/pic-bed@main/img/20210412164128.png",alt:""}})]),t._v(" "),r("h2",{attrs:{id:"平衡二叉树-重要"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#平衡二叉树-重要"}},[t._v("#")]),t._v(" "),r("a",{attrs:{href:"https://baike.baidu.com/item/AVL%E6%A0%91/10986648?fr=aladdin",target:"_blank",rel:"noopener noreferrer"}},[t._v("平衡二叉树（重要）"),r("OutboundLink")],1)]),t._v(" "),r("p",[t._v("平衡二叉树又称 AVL Tree ，平衡二叉树是自平衡的，保证任何节点左右子树的高度差不能大于1。")]),t._v(" "),r("p",[t._v("优化了二叉查找树退化成链表的现象。")]),t._v(" "),r("p",[r("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/AlbertYang0801/pic-bed@main/img/20210412165959.png",alt:""}})]),t._v(" "),r("p",[t._v("参考链接："),r("a",{attrs:{href:"https://juejin.cn/post/6844903653795430413#heading-0",target:"_blank",rel:"noopener noreferrer"}},[t._v("看图轻松理解数据结构与算法系列(AVL树)"),r("OutboundLink")],1)])])}),[],!1,null,null,null);e.default=n.exports}}]);