import{_ as l,c as e,o as f,aN as r}from"./chunks/framework.A-MC8nKA.js";const m=JSON.parse('{"title":"Kafka","description":"","frontmatter":{},"headers":[],"relativePath":"middleware/kafka/index.md","filePath":"middleware/kafka/index.md","lastUpdated":1752827238000}'),i={name:"middleware/kafka/index.md"};function t(k,a,h,o,p,d){return f(),e("div",null,a[0]||(a[0]=[r('<h1 id="kafka" tabindex="-1">Kafka <a class="header-anchor" href="#kafka" aria-label="Permalink to &quot;Kafka&quot;">​</a></h1><h2 id="kafka配置" tabindex="-1">Kafka配置 <a class="header-anchor" href="#kafka配置" aria-label="Permalink to &quot;Kafka配置&quot;">​</a></h2><ul><li><a href="./Kafka消费策略.html">Kafka消费策略</a></li><li><a href="./Kafka生产者参数.html">Kafka生产者参数</a></li><li><a href="./kafka的分区副本规划.html">kafka的分区副本规划</a></li></ul><h2 id="kafka原理总结" tabindex="-1">Kafka原理总结 <a class="header-anchor" href="#kafka原理总结" aria-label="Permalink to &quot;Kafka原理总结&quot;">​</a></h2><ul><li><p><a href="./kafka消费模型.html">kafka消费模型</a></p></li><li><p><a href="./kafka-ACK应答机制.html">kafka-ACK应答机制</a></p></li><li><p><a href="./kafka解决重复消费.html">kafka解决重复消费</a></p></li><li><p><a href="./Kafka分区机制策略.html">Kafka分区机制策略</a></p></li><li><p><a href="./kafka保证消息不丢失.html">kafka保证消息不丢失</a></p></li><li><p><a href="./消费者组.html">消费者组</a></p></li><li><p><a href="./__consumer_offsets.html">__consumer_offsets</a></p></li><li><p><a href="./Kafka总控制器Controller.html">Kafka总控制器Controller</a></p></li><li><p><a href="./Kafka副本机制.html">Kafka副本机制</a></p></li><li><p><a href="./Producer发布消息机制.html">Producer发布消息机制</a></p></li><li><p><a href="./高水位HW和LEO.html">高水位HW和LEO</a></p></li><li><p><a href="./数据日志分段存储.html">数据日志分段存储</a></p></li><li><p><a href="./Kafka高性能的原因.html">Kafka高性能的原因</a></p></li></ul><h2 id="使用总结" tabindex="-1">使用总结 <a class="header-anchor" href="#使用总结" aria-label="Permalink to &quot;使用总结&quot;">​</a></h2><ul><li><a href="./Kafka手动重新分区.html">Kafka手动重新分区</a></li></ul>',7)]))}const s=l(i,[["render",t]]);export{m as __pageData,s as default};
