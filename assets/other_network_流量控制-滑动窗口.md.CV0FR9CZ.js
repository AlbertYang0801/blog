import{_ as t,c as l,o as e,aN as n}from"./chunks/framework.A-MC8nKA.js";const _=JSON.parse('{"title":"流量控制-滑动窗口","description":"","frontmatter":{},"headers":[],"relativePath":"other/network/流量控制-滑动窗口.md","filePath":"other/network/流量控制-滑动窗口.md","lastUpdated":1752827268000}'),r={name:"other/network/流量控制-滑动窗口.md"};function o(i,a,s,p,g,d){return e(),l("div",null,a[0]||(a[0]=[n('<h1 id="流量控制-滑动窗口" tabindex="-1">流量控制-滑动窗口 <a class="header-anchor" href="#流量控制-滑动窗口" aria-label="Permalink to &quot;流量控制-滑动窗口&quot;">​</a></h1><p>在TCP中，滑动窗口用来流量控制。确保发送方不会过快的发送数据导致接收方无法处理数据。</p><p>TCP拥塞控制是为了解决发送方以过高的速率发送导致<strong>网络中出现阻塞</strong>，其核心思想就是发生重传时控制发送方滑动窗口（通过控制<strong>拥塞窗口</strong>cwnd）的大小，从而<strong>控制其发送速率</strong>。</p><h2 id="滑动窗口" tabindex="-1">滑动窗口 <a class="header-anchor" href="#滑动窗口" aria-label="Permalink to &quot;滑动窗口&quot;">​</a></h2><p>TCP窗口包括发送窗口和接收窗口，用来限制不同端所能容纳数据的上限，达到控制发送数据的速率。</p><p><img src="https://s2.loli.net/2025/07/17/2uUdOBizZAyqlh7.png" alt="image.png" loading="lazy"></p><p>TCP报文里面的窗口大小，作用是<strong>告诉对方本端的接受缓冲区还能容纳多少字节的数据</strong>。</p><p><img src="https://s2.loli.net/2025/07/17/7dwUbzMFaVBWxjp.png" alt="image.png" loading="lazy"></p><p>在通信过程中，接收方每次收到数据包，在发送确认报文的时候，还需要<strong>告诉发送方自己的缓冲区剩余大小</strong>。<strong>缓冲区剩余大小，我们称之为接受窗口大小。也就是WIN。</strong></p><h3 id="发送端的滑动窗口" tabindex="-1">发送端的滑动窗口 <a class="header-anchor" href="#发送端的滑动窗口" aria-label="Permalink to &quot;发送端的滑动窗口&quot;">​</a></h3><ul><li>已发送且已收到 ACK 确认</li><li>已发送但未收到 ACK 确认</li><li>未发送但可以发送</li><li>未发送也不可以发送</li></ul><p><img src="https://s2.loli.net/2025/07/17/9qY1My8ZpJxKTFw.png" alt="image.png" loading="lazy"></p><h3 id="接收端的滑动窗口" tabindex="-1">接收端的滑动窗口 <a class="header-anchor" href="#接收端的滑动窗口" aria-label="Permalink to &quot;接收端的滑动窗口&quot;">​</a></h3><ul><li>已成功接收并确认</li><li>未收到数据但可以接收</li><li>未收到数据并不可以接收的数据</li></ul><p><img src="https://s2.loli.net/2025/07/17/c5nfIeosrPzR3Y8.png" alt="image.png" loading="lazy"></p><p><img src="https://s2.loli.net/2025/07/17/ravNQlRpUdK7ZP4.png" alt="image.png" loading="lazy"></p>',16)]))}const c=t(r,[["render",o]]);export{_ as __pageData,c as default};
