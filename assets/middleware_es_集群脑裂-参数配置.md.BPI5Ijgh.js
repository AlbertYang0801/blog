import{_ as e,c as t,o as r,aM as s}from"./chunks/framework.Du1sph90.js";const c=JSON.parse('{"title":"集群脑裂-参数配置","description":"","frontmatter":{},"headers":[],"relativePath":"middleware/es/集群脑裂-参数配置.md","filePath":"middleware/es/集群脑裂-参数配置.md","lastUpdated":1752832844000}'),i={name:"middleware/es/集群脑裂-参数配置.md"};function l(o,a,d,m,n,p){return r(),t("div",null,a[0]||(a[0]=[s('<h1 id="集群脑裂-参数配置" tabindex="-1">集群脑裂-参数配置 <a class="header-anchor" href="#集群脑裂-参数配置" aria-label="Permalink to &quot;集群脑裂-参数配置&quot;">​</a></h1><h3 id="集群脑裂的问题" tabindex="-1">集群脑裂的问题 <a class="header-anchor" href="#集群脑裂的问题" aria-label="Permalink to &quot;集群脑裂的问题&quot;">​</a></h3><h3 id="什么是集群脑裂" tabindex="-1">什么是集群脑裂 <a class="header-anchor" href="#什么是集群脑裂" aria-label="Permalink to &quot;什么是集群脑裂&quot;">​</a></h3><p>es 在主节点上产生分歧，产生多个master 节点，从而使集群分裂成多个同名集群，使得集群处于异常状态。</p><p>当出现多个master节点的时候，可能发生写入请求分配到不同的master节点，而数据只保存在对应的master节点的分片上，不会复制到其它节点。<strong>此时若访问不同的节点，会发现查询的结果是不一样的。</strong></p><h3 id="举例说明脑裂" tabindex="-1">举例说明脑裂 <a class="header-anchor" href="#举例说明脑裂" aria-label="Permalink to &quot;举例说明脑裂&quot;">​</a></h3><p><code>discovery.zen.minimum_master_nodes</code> 参数之前设置为 1（默认值）。</p><p>这个参数的含义是限制选举master节点的数量。</p><ul><li>当master节点不存在时，至少有几个master候选节点才可以开始选举master节点。</li><li>当集群内候选节点数量不足时，限制取消master节点。</li></ul><hr><p>因为我们部署的 es 是3个节点，默认第1个es节点作为master节点。假如 master 节点和其余两个data节点之前网络不通，就会出现两种情况。</p><ul><li>master 节点认为集群中只存在它这一个节点，而且满足候选节点数量1，所以master节点还是master节点。</li><li>两个data节点之间通信正常，认为集群中存在两个节点，同样满足候选节点数量1，所以两个data节点会选举一个master节点出来。</li></ul><p>此时整个es集群有两个master节点，出现了脑裂的情况。</p><h3 id="解决脑裂的方式" tabindex="-1">解决脑裂的方式 <a class="header-anchor" href="#解决脑裂的方式" aria-label="Permalink to &quot;解决脑裂的方式&quot;">​</a></h3><p><strong>master候选资格节点数量 / 2 + 1</strong>，所有有资格成为master的节点都需要加上这个配置。</p><p>即 <code>discovery.zen.minimum_master_nodes</code> 参数设置为 2 。</p><p><img src="https://s2.loli.net/2025/07/18/QLTbwayPGnfV95O.png" alt="image-20250718175531334" loading="lazy"></p><p>假如 master 节点和其余两个data节点之前网络不通，就会出现两种情况。</p><ul><li>master 节点认为集群中只存在它这一个节点，不满足候选节点数量2，此时master节点会变更为data节点。</li><li>两个data节点之间通信正常，认为集群中存在两个节点，满足配置候选节点数量2，所以两个data节点会选举一个master节点出来。</li></ul><p>此时整个es集群只有1个master节点，不会出现脑裂情况。</p>',20)]))}const h=e(i,[["render",l]]);export{c as __pageData,h as default};
