import{_ as e,c as t,o as n,aM as i}from"./chunks/framework.Du1sph90.js";const d=JSON.parse('{"title":"Linux如何收发网络包","description":"","frontmatter":{},"headers":[],"relativePath":"other/network/Linux如何收发网络包.md","filePath":"other/network/Linux如何收发网络包.md","lastUpdated":1752827268000}'),o={name:"other/network/Linux如何收发网络包.md"};function r(l,a,s,_,h,u){return n(),t("div",null,a[0]||(a[0]=[i('<h1 id="linux如何收发网络包" tabindex="-1">Linux如何收发网络包 <a class="header-anchor" href="#linux如何收发网络包" aria-label="Permalink to &quot;Linux如何收发网络包&quot;">​</a></h1><p><a href="https://www.xiaolincoding.com/network/1_base/how_os_deal_network_package.html#linux-%E6%8E%A5%E6%94%B6%E7%BD%91%E7%BB%9C%E5%8C%85%E7%9A%84%E6%B5%81%E7%A8%8B" target="_blank" rel="noreferrer">2.3 Linux 系统是如何收发网络包的？</a></p><h2 id="网络协议栈" tabindex="-1">网络协议栈 <a class="header-anchor" href="#网络协议栈" aria-label="Permalink to &quot;网络协议栈&quot;">​</a></h2><p><img src="https://s2.loli.net/2025/07/17/DKhZqVRS32X7JUl.png" alt="image.png" loading="lazy"></p><ol><li>应用程序需要通过系统调用，来和 Socket 进程数据交互。</li><li>Socket 层是介于应用层和传输层之间的抽象层。</li><li>最下面的一层，则是网卡驱动程序和硬件网卡设备。</li></ol><h2 id="linux-接收和发送网络包的流程" tabindex="-1">Linux 接收和发送网络包的流程 <a class="header-anchor" href="#linux-接收和发送网络包的流程" aria-label="Permalink to &quot;Linux 接收和发送网络包的流程&quot;">​</a></h2><p><img src="https://s2.loli.net/2025/07/17/sAI4r3uPyYg8bek.png" alt="image.png" loading="lazy"></p>',7)]))}const p=e(o,[["render",r]]);export{d as __pageData,p as default};
