import{_ as l,c as e,o as i,aN as s}from"./chunks/framework.A-MC8nKA.js";const d=JSON.parse('{"title":"为什么弃用Elasticsearch","description":"","frontmatter":{},"headers":[],"relativePath":"database/clickhouse/为什么弃用Elasticsearch.md","filePath":"database/clickhouse/为什么弃用Elasticsearch.md","lastUpdated":1752832844000}'),t={name:"database/clickhouse/为什么弃用Elasticsearch.md"};function r(c,a,h,o,n,u){return i(),e("div",null,a[0]||(a[0]=[s('<h1 id="为什么弃用elasticsearch" tabindex="-1">为什么弃用Elasticsearch <a class="header-anchor" href="#为什么弃用elasticsearch" aria-label="Permalink to &quot;为什么弃用Elasticsearch&quot;">​</a></h1><h2 id="es-使用痛点" tabindex="-1">es 使用痛点 <a class="header-anchor" href="#es-使用痛点" aria-label="Permalink to &quot;es 使用痛点&quot;">​</a></h2><p>对于开发来说：</p><ol><li>大批量数据查询导致 es 的 CPU 飙升。</li><li>数据量增大之后，es 的查询效率下降，影响接口性能。</li><li>聚合效率低。</li></ol><p>对于运维来说：</p><ol><li>维护成本很大，在数据量大的情况，es 占用磁盘空间很大，没有很好的压缩手段。</li><li>es 很占内存，内存配置为整体内存的一半。</li></ol><h3 id="问题记录" tabindex="-1">问题记录 <a class="header-anchor" href="#问题记录" aria-label="Permalink to &quot;问题记录&quot;">​</a></h3><ul><li><p>缓存计算系统评分导致 es 的 cpu 飙升。</p><p>系统评分需要查询 es 的流量信息进行计算，实时查询很慢。做了定时任务计算分数信息并作缓存。</p><ul><li>经常发现 es 的 cpu 会被打满。排查发现随着系统的增多，当定时任务跑的时候，批量查询 es 次数太多的时候，es的 cpu 会持续飙升。</li></ul></li></ul><h3 id="业务场景分析" tabindex="-1">业务场景分析 <a class="header-anchor" href="#业务场景分析" aria-label="Permalink to &quot;业务场景分析&quot;">​</a></h3><p>云监控采集的平台数据以流量数据为主，主要是用来进行分析的。</p><p>数据一经存入，极少进行增改删操作。是一个很典型的 OLAP（联机分析处理） 场景</p><h3 id="ck-和-es-的对比" tabindex="-1">ck 和 es 的对比 <a class="header-anchor" href="#ck-和-es-的对比" aria-label="Permalink to &quot;ck 和 es 的对比&quot;">​</a></h3><p><strong>优点:</strong></p><ul><li>硬件资源成本更低，同等场景下，Clickhouse占用的资源更小。</li><li>人力成本更低，新人学习、开发单测以及测试方面都更加友好，更容易介入。</li><li>OLAP场景下Clickhouse比Elasticsearch更适合，聚合计算比Elasticsearch更精确、更快，更节省服务器计算资源。</li><li>写入性能更高，同等情况下是Elasticsearch的5倍，写入时消耗的服务器资源更小。</li><li>Elasticsearch在大量导出情况下频繁GC，严重可能导致宕机，不如Clickhouse稳定。</li><li>查询性能平均是Elasticsearch的12.7倍，Clickhouse的查询性能受服务器配置影响较小。</li></ul><p><strong>缺点：</strong></p><ul><li>关联查询不如单表查询效率高，而且差距很明显。 <ul><li>云监控业务场景极少有关联查询。</li></ul></li><li>在高并发查询上支持的不如Elasticsearch支持的更好。 <ul><li>由于平台是 toB的，不会有很大的 QPS。意味着不会有太多高并发查询。</li></ul></li></ul><h2 id="云监控真实性能对比" tabindex="-1">云监控真实性能对比 <a class="header-anchor" href="#云监控真实性能对比" aria-label="Permalink to &quot;云监控真实性能对比&quot;">​</a></h2><ul><li>压测环境对比组件查询效率提高10倍。</li><li>压测环境对比组件写入和更新效果不明显。</li></ul><h2 id="技术文章" tabindex="-1">技术文章 <a class="header-anchor" href="#技术文章" aria-label="Permalink to &quot;技术文章&quot;">​</a></h2><ul><li><p><a href="https://mp.weixin.qq.com/s/l4RgNQPxvdNIqx52LEgBnQ" target="_blank" rel="noreferrer">为什么我们要从ES迁移到ClickHouse？</a></p></li><li><p><a href="https://zhuanlan.zhihu.com/p/631782529" target="_blank" rel="noreferrer">Elasticsearch 与 Clickhouse 数据存储对比 | 京东云技术团队</a></p></li></ul>',20)]))}const _=l(t,[["render",r]]);export{d as __pageData,_ as default};
