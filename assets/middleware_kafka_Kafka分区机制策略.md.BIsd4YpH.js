import{_ as e,c as l,o as t,aM as i}from"./chunks/framework.Du1sph90.js";const c=JSON.parse('{"title":"Kafka分区机制策略","description":"","frontmatter":{},"headers":[],"relativePath":"middleware/kafka/Kafka分区机制策略.md","filePath":"middleware/kafka/Kafka分区机制策略.md","lastUpdated":1752827238000}'),r={name:"middleware/kafka/Kafka分区机制策略.md"};function o(n,a,p,d,s,h){return t(),l("div",null,a[0]||(a[0]=[i('<h1 id="kafka分区机制策略" tabindex="-1">Kafka分区机制策略 <a class="header-anchor" href="#kafka分区机制策略" aria-label="Permalink to &quot;Kafka分区机制策略&quot;">​</a></h1><h2 id="分区策略" tabindex="-1">分区策略 <a class="header-anchor" href="#分区策略" aria-label="Permalink to &quot;分区策略&quot;">​</a></h2><p><strong>分区策略是决定生产者将消息发送到哪个分区的算法。</strong></p><h3 id="轮询策略" tabindex="-1">轮询策略 <a class="header-anchor" href="#轮询策略" aria-label="Permalink to &quot;轮询策略&quot;">​</a></h3><p>是 Java 生产者 API 默认提供的分区策略。</p><ul><li>轮询策略有非常优秀的负载均衡表现，它总是能保证消息最大限度地被平均分配到所有分区上，故默认情况下它是最合理的分区策略，也是我们最常用的分区策略之一。</li></ul><p><img src="https://s2.loli.net/2025/06/26/FpJ1xmvKRX6lHjG.png" alt="image.png" loading="lazy"></p><h3 id="随机策略" tabindex="-1">随机策略 <a class="header-anchor" href="#随机策略" aria-label="Permalink to &quot;随机策略&quot;">​</a></h3><p>将消息随机写入分区</p><h3 id="key-指定分区" tabindex="-1">key 指定分区 <a class="header-anchor" href="#key-指定分区" aria-label="Permalink to &quot;key 指定分区&quot;">​</a></h3><p>当发送消息时指定了key，Kafka会根据key的hash值与分区数取模来决定将数据写入哪个分区。</p><p>项目中 dr 就是生产这种方式，根据消息类型指定 key，比如 transactionId。这样能保证同一transactionId的数据都存放在相同的分区里面，这样在消费时就能保证被同一个消费者消费。（如果其它消费者阻塞了，容易导致写入数据慢或其它问题）</p><p><img src="https://s2.loli.net/2025/06/26/XFQ3xmIl2Ge1zrq.png" alt="image.png" loading="lazy"></p><p>Kafka 默认分区策略实际上同时实现了两种策略：</p><ul><li>如果指定了 Key，那么默认实现按消息键保序策略；</li><li>如果没有指定 Key，则使用轮询策略。</li></ul><h3 id="默认分区策略" tabindex="-1">默认分区策略 <a class="header-anchor" href="#默认分区策略" aria-label="Permalink to &quot;默认分区策略&quot;">​</a></h3><p>主要根据发送消息时是否指定 key 有关系：</p><ul><li><p>指定了 key</p><p>key 指定分区策略</p></li><li><p>如果未指定 key</p><p>轮询策略</p></li></ul><h2 id="为什么引入分区" tabindex="-1">为什么引入分区 <a class="header-anchor" href="#为什么引入分区" aria-label="Permalink to &quot;为什么引入分区&quot;">​</a></h2><ol><li>对 kafka 来说，提高了 topic 的读写能力。</li><li>对Consumer 来说，提高消费者的消费能力和扩展能力。</li></ol>',20)]))}const f=e(r,[["render",o]]);export{c as __pageData,f as default};
