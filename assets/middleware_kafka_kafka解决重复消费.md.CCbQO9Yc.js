import{_ as e,c as l,o,aM as t}from"./chunks/framework.Du1sph90.js";const c=JSON.parse('{"title":"kafka解决重复消费","description":"","frontmatter":{},"headers":[],"relativePath":"middleware/kafka/kafka解决重复消费.md","filePath":"middleware/kafka/kafka解决重复消费.md","lastUpdated":1752827238000}'),r={name:"middleware/kafka/kafka解决重复消费.md"};function i(p,a,s,n,m,d){return o(),l("div",null,a[0]||(a[0]=[t('<h1 id="kafka解决重复消费" tabindex="-1">kafka解决重复消费 <a class="header-anchor" href="#kafka解决重复消费" aria-label="Permalink to &quot;kafka解决重复消费&quot;">​</a></h1><p><a href="https://zhuanlan.zhihu.com/p/112745985" target="_blank" rel="noreferrer">技术干货分享 | Kafka重复消费场景及解决方案</a></p><h2 id="导致重复消费的原因" tabindex="-1">导致重复消费的原因 <a class="header-anchor" href="#导致重复消费的原因" aria-label="Permalink to &quot;导致重复消费的原因&quot;">​</a></h2><ul><li>enable.auto.commit 默认值true，表示消费者会周期性自动提交消费的offset</li><li>auto.commit.interval.ms 在enable.auto.commit 为true的情况下， 自动提交的间隔，默认值5000ms</li><li>max.poll.records 单次消费者拉取的最大数据条数，默认值 500</li><li>max.poll.interval.ms 默认值5分钟，表示若5分钟之内消费者没有消费完上一次poll的消息，那么consumer会主动发起离开group的请求</li></ul><ol><li><p>第一种情况，在<code>enable.auto.commit=true</code>时</p><p>Consumer 每次 poll 数据是批量 poll 的，当消费完之后，会提交 offset。</p><p>如果在消费一半数据未提交 offset 的情况下，Consumer 异常。重启之后会从上次的 offset 开始消费，就会重复消费到部分数据。</p></li><li><p>第二种情况，假如 Consumer 消费能力太弱，单次 poll的数据在 <code>max.poll.interval.ms</code>范围内还未消费完成， 导致 Consumer 离开 ConsumerGroup，并且触发了 Rebalance。此时 offset 并未更新。</p><p>Rebalance 结束后，重新分配的分区会从之前的 offset 读取数据，导致重复消费。</p></li></ol><h2 id="解决重复消费的思路" tabindex="-1">解决重复消费的思路 <a class="header-anchor" href="#解决重复消费的思路" aria-label="Permalink to &quot;解决重复消费的思路&quot;">​</a></h2><p>以上两种情况只能通过优化来尽量避免重复消费。</p><ol><li><p>引入单独去重机制，将消息的接口幂等性处理。</p><ul><li>比如查询操作，具有天然幂等性，不需要处理。</li><li>更新或者新增操作，通过设置唯一 key，达到幂等效果。（比如 mysql 设置唯一索引，保证单次插入和多次插入效果一致）</li></ul></li><li><p>提高消费者的消费能力，解决因消费时间过长导致的重复消费问题。</p><p>提高消费者的能力，如果消费逻辑比较重的话，可以采用异步方式去处理。</p><p>如果消费者消费能力有限，可以通过调整配置来减少单次消费的数据。</p><ul><li><p><code>max.poll.interval.ms</code></p><p>默认值 5 分钟，可以适当加大。</p></li><li><p><code>max.poll.records</code></p><p>默认值 500，可以适当减少。</p></li></ul></li></ol>',8)]))}const u=e(r,[["render",i]]);export{c as __pageData,u as default};
